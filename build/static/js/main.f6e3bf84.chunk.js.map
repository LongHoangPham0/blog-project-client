{"version":3,"sources":["redux/types/commentType.ts","pages/blogs/[slug].tsx","pages/category.tsx","pages/forgot_password.tsx","pages/reset_password/[slug].tsx","pages/update_blog/[slug].tsx","utils/checkTokenExpired.ts","components/editor/liteQuill.tsx","components/comments/Input.tsx","components/comments/avatarComment.tsx","components/comments/avatarReply.tsx","redux/actions/commentAction.ts","components/comments/commentList.tsx","components/comments/Comments.tsx","components/blog/displayBlog.tsx","pages/blog/[slug].tsx","components/auth/LoginPass.tsx","components/auth/LoginSMS.tsx","components/auth/socialLogin.tsx","pages/login.tsx","components/profile/userInfo.tsx","components/profile/otherInfo.tsx","components/profile/userBlogs.tsx","pages/profile/[slug].tsx","components/auth/registerForm.tsx","pages/register.tsx","redux/actions/authAction.ts","pages sync /^/.*$","redux/types/blogType.ts","redux/actions/blogAction.ts","components/global/Loading.tsx","redux/types/alertType.ts","redux/types/categoryType.ts","pageRender.tsx","components/global/Search.tsx","components/global/Menu.tsx","components/global/Header.tsx","components/global/Footer.tsx","socketClient.tsx","App.tsx","redux/reducers/authReducer.ts","redux/reducers/alertReducer.ts","redux/reducers/categoryReducer.ts","redux/reducers/homeBlogsReducer.ts","redux/reducers/blogsCategoryReducer.ts","redux/reducers/otherInfoReducer.ts","redux/reducers/blogsUserReducer.ts","redux/reducers/commentReducer.ts","redux/types/socketType.ts","redux/reducers/socketReducer.ts","redux/reducers/index.ts","redux/store.ts","index.tsx","utils/imageUpload.ts","components/global/notFound.tsx","utils/Valid.ts","utils/config.ts","redux/types/authType.ts","redux/actions/userAction.ts","components/alert/Loading.tsx","components/alert/Toast.tsx","components/alert/Alert.tsx","components/global/Pagination.tsx","components/cards/cardHoriz.tsx","redux/actions/categoryAction.tsx","components/cards/createForm.tsx","components/editor/reactQuill.tsx","pages/create_blog.tsx","components/cards/cardVert.tsx","redux/types/profileType.ts","pages/index.tsx","utils/fetchData.ts","pages/active/[slug].tsx"],"names":["CREATE_COMMENT","GET_COMMENTS","REPLY_COMMENT","UPDATE_COMMENT","UPDATE_REPLY","DELETE_COMMENT","DELETE_REPLY","BlogsByCategory","useSelector","state","categories","blogsCategory","dispatch","useDispatch","slug","useParams","useState","categoryId","setCategoryId","blogs","setBlogs","total","setTotal","history","useHistory","search","location","useEffect","category","find","item","name","_id","every","id","getBlogsByCategoryId","data","push","className","map","blog","callback","num","Category","setName","edit","setEdit","auth","user","role","onSubmit","e","preventDefault","access_token","updateCategory","createCategory","htmlFor","style","cursor","onClick","type","value","onChange","target","window","confirm","deleteCategory","ForgotPassword","account","setAccount","maxWidth","forgotPassword","ResetPassword","token","password","setPassword","cf_password","setCfPassword","typePass","setTypePass","typeCfPass","setTypeCfPass","resetPassword","placeholder","UpdateBlog","CheckTokenExpired","a","jwt_decode","exp","Date","now","axios","get","res","AUTH","payload","container","LiteQuill","body","setBody","modules","toolbar","theme","Input","divRef","useRef","content","ref","dangerouslySetInnerHTML","__html","display","div","current","innerText","trim","undefined","AvatarComment","src","avatar","alt","to","avatarReply","reply_user","textDecoration","getComments","getAPI","comments","ALERT","errors","response","msg","CommentList","children","comment","showReply","setShowReply","onReply","setOnReply","handleDelete","result","comment_root","deleteAPI","Nav","newComment","patchAPI","blog_user_id","createdAt","toLocaleString","blog_id","replyCM","toISOString","postAPI","replyComment","Comments","next","setNext","opacity","pointerEvents","slice","index","length","color","DisplayBlog","showComments","setShowComments","loading","setLoading","fetchComments","useCallback","title","createComment","Loading","Pagination","DetailBlog","socket","setBlog","error","setError","then","catch","err","emit","showErrMsg","LoginPass","userLogin","setUserLogin","handleChangeInput","login","LoginSMS","phone","setPhone","loginSMS","SocialLogin","client_id","cookiepolicy","onSuccess","googleUser","id_token","getAuthResponse","googleLogin","appId","authResponse","accessToken","userID","facebookLogin","Login","sms","setSms","url","replace","UserInfo","setUser","updateUser","URL","createObjectURL","accept","files","file","defaultValue","disabled","OtherInfo","other","setOther","otherInfo","getOtherInfo","newUser","UserBlogs","blogsUser","user_id","getBlogsByUserId","Profile","console","log","RegisterForm","userRegister","setuserRegister","register","Register","success","localStorage","setItem","check","validRegister","errLength","errMsg","refreshToken","getItem","removeItem","logout","validPhone","valid","verifySMS","code","prompt","setTimeout","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","Object","resolve","module","exports","GET_HOME_BLOGS","GET_BLOGS_CATEGORY_ID","GET_BLOGS_USER_ID","CREATE_BLOGS_USER_ID","DELETE_BLOGS_USER_ID","createBlog","thumbnail","imageUpload","photo","newBlog","getHomeBlogs","updateBlog","putAPI","deleteBlog","CREATE_CATEGORY","GET_CATEGORIES","UPDATE_CATEGORY","DELETE_CATEGORY","PageRender","page","React","createElement","require","default","generatePage","Search","setSearch","pathname","useLocation","delayDebounce","clearTimeout","background","zIndex","maxHeight","overflow","Menu","navLinks","label","path","isActive","pn","link","Header","position","top","left","Footer","SocketClient","on","off","App","getCategories","io","API_URL","close","Alert","exact","component","authReducer","action","alertReducer","categoryReducer","types","filter","homeBlogsReducer","blogsCategoryReducer","otherInfoReducer","GET_OTHER_INFO","blogsUserReducer","initialState","commentReducer","rp","SOCKET","socketReducer","combineReducers","alert","homeBlogs","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","checkImage","size","includes","formData","FormData","append","fetch","method","json","public_id","secure_url","NotFound","minHeight","transform","test","String","toLowerCase","checkPassword","validCreateBlog","description","shallowEqual","object1","object2","keys1","keys2","key","width","height","viewBox","stroke","strokeWidth","fill","points","x","y","Toast","bgColor","right","minWidth","text","showSuccessErrMsg","setPage","newArr","Array","_","i","handlePagination","Number","CardHoriz","objectFit","newCategory","CreateForm","bottom","rows","resize","QuillReact","quillRef","handleChangeImage","input","click","onchange","quill","range","getEditor","getSelection","insertEmbed","getModule","addHandler","CreateBlog","initState","setText","oldData","setOldData","initData","handleSubmit","newData","CardVert","textTransform","Home","homeBlog","count","defaults","withCredentials","post","headers","Authorization","patch","put","delete","Active","setErr","setSuccess","active_token","respond"],"mappings":"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","file":"static/js/main.f6e3bf84.chunk.js","sourcesContent":["import { IComment } from '../../utils/typeScript'\r\n\r\nexport const CREATE_COMMENT = 'CREATE_COMMENT'\r\nexport const GET_COMMENTS = 'GET_COMMENTS'\r\nexport const REPLY_COMMENT = 'REPLY_COMMENT'\r\nexport const UPDATE_COMMENT = 'UPDATE_COMMENT'\r\nexport const UPDATE_REPLY = 'UPDATE_REPLY'\r\nexport const DELETE_COMMENT = 'DELETE_COMMENT'\r\nexport const DELETE_REPLY = 'DELETE_REPLY'\r\n\r\nexport interface ICommentState {\r\n    data: IComment[],\r\n    total: number\r\n}\r\n\r\nexport interface ICreateCommentType {\r\n    type: typeof CREATE_COMMENT,\r\n    payload: IComment\r\n}\r\n\r\nexport interface IGetCommentsType {\r\n    type: typeof GET_COMMENTS,\r\n    payload: ICommentState\r\n}\r\n\r\nexport interface IReplyCommentType {\r\n    type: typeof REPLY_COMMENT,\r\n    payload: IComment\r\n}\r\n\r\nexport interface IUpdateCommentType {\r\n    type: typeof UPDATE_COMMENT | typeof UPDATE_REPLY,\r\n    payload: IComment\r\n}\r\n\r\nexport interface IDeleteCommentType {\r\n    type: typeof DELETE_COMMENT | typeof DELETE_REPLY,\r\n    payload: IComment\r\n}\r\n\r\nexport type ICommentType = \r\n| ICreateCommentType\r\n| IGetCommentsType\r\n| IReplyCommentType\r\n| IUpdateCommentType\r\n| IDeleteCommentType","import React, { useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getBlogsByCategoryId } from '../../redux/actions/blogAction'\r\n\r\nimport { RootStore, IParams, IBlog } from '../../utils/typeScript'\r\n\r\nimport Loading from '../../components/global/Loading'\r\nimport Pagination from '../../components/global/Pagination'\r\nimport CardVert from '../../components/cards/cardVert'\r\n\r\nconst BlogsByCategory = () => {\r\n  const { categories, blogsCategory } = useSelector((state: RootStore) => state)\r\n  const dispatch = useDispatch()\r\n  const { slug } = useParams<IParams>()\r\n\r\n  const [categoryId, setCategoryId] = useState('')\r\n  const [blogs, setBlogs] = useState<IBlog[]>()\r\n  const [total, setTotal] = useState(0)\r\n\r\n  const history = useHistory()\r\n  const { search } = history.location\r\n\r\n  useEffect(() => {\r\n    const category = categories.find(item => item.name === slug)\r\n    if(category) setCategoryId(category._id)\r\n  },[slug, categories])\r\n\r\n\r\n  useEffect(() => {\r\n    if(!categoryId) return;\r\n\r\n    if(blogsCategory.every(item => item.id !== categoryId)){\r\n      dispatch(getBlogsByCategoryId(categoryId, search))\r\n    }else{\r\n      const data = blogsCategory.find(item => item.id === categoryId)\r\n      if(!data) return;\r\n      setBlogs(data.blogs)\r\n      setTotal(data.total)\r\n      if(data.search) history.push(data.search)\r\n    }\r\n  },[categoryId, blogsCategory, dispatch, search, history])\r\n\r\n  const handlePagination = (num: number) => {\r\n    const search = `?page=${num}`\r\n    dispatch(getBlogsByCategoryId(categoryId, search))\r\n  }\r\n\r\n  if(!blogs) return <Loading />\r\n\r\n  return (\r\n    <div className=\"blogs_category\">\r\n      <div className=\" blogs_category_show_blogs\">\r\n        {\r\n          blogs.map(blog => (\r\n            <CardVert key={blog._id} blog={blog} />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n      {\r\n        total > 1 &&\r\n        <Pagination\r\n        //total number of pagination \r\n        total={total} \r\n        callback={handlePagination}\r\n      />\r\n      }\r\n    </div>\r\n      \r\n      \r\n  )\r\n}\r\n\r\nexport default BlogsByCategory","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { FormSubmit, RootStore, ICategory } from '../utils/typeScript';\r\n\r\nimport { createCategory, updateCategory, deleteCategory } from '../redux/actions/categoryAction'\r\n\r\nimport NotFound from '../components/global/notFound' \r\n\r\nconst Category = () => {\r\n    const [name, setName] = useState('')\r\n    const [edit, setEdit] = useState<ICategory | null>(null)\r\n\r\n    const { auth, categories } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(edit) setName(edit.name)\r\n    }, [edit])\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        if(!auth.access_token || !name) return;\r\n\r\n        if (edit) {\r\n            if(edit.name === name) return;\r\n            const data = {...edit, name}\r\n            dispatch(updateCategory(data, auth.access_token))\r\n        } else {\r\n            dispatch(createCategory(name, auth.access_token))\r\n        }\r\n        setName('')\r\n        setEdit(null)\r\n    }\r\n\r\n    const handleDelete = (id: string) => {\r\n        // console.log(id)\r\n        if(!auth.access_token) return;\r\n        if(window.confirm('Bạn có muốn xóa bài viết này? Thao tác này sẽ không thể hoàn lại')){\r\n            dispatch(deleteCategory(id, auth.access_token))\r\n        }\r\n    }\r\n\r\n    if(auth.user?.role !== 'admin') return <NotFound />\r\n    return (\r\n        <div className='category'>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor='category'>Tạo thể loại</label>\r\n\r\n                <div className='d-flex align-items-center'>\r\n                    {\r\n                        edit && <i className=\"fas fa-times me-2 text-danger\" \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => setEdit(null)} />\r\n                    }\r\n                    <input type='text' name='category' id='category' value={name} \r\n                    onChange={e => setName(e.target.value)} />\r\n\r\n                    <button type='submit'>\r\n                        { edit ? 'Cập nhập' : 'Tạo '}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        \r\n            <div>\r\n                {\r\n                categories.map(category => (\r\n                    <div className=\"category_row\" key={category._id}>\r\n                    <p className=\"m-0 text-capitalize\">{category.name}</p>\r\n\r\n                    <div>\r\n                        <i className=\"fas fa-edit mx-2\" onClick={() => setEdit(category)} />\r\n                        <i className=\"fas fa-trash-alt\" onClick={() => handleDelete(category._id)} />\r\n                    </div>\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { forgotPassword} from '../redux/actions/authAction'\r\n\r\nimport { FormSubmit} from '../utils/typeScript'\r\n\r\nconst ForgotPassword = () => {\r\n  const [account, setAccount] = useState('')\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSubmit = (e: FormSubmit) => {\r\n    e.preventDefault()\r\n    dispatch(forgotPassword(account))\r\n  }\r\n\r\n  return (\r\n    <div className=\"my-4\" style={{maxWidth: '500px'}}>\r\n      <h2>Quên mật khẩu?</h2>\r\n\r\n      <form className=\"form-group\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"account\">Email / Số điện thoại</label>\r\n\r\n        <div className=\"d-flex align-items-center\">\r\n          <input type=\"text\" className=\"form-control\" id=\"account\"\r\n          name=\"account\" onChange={e => setAccount(e.target.value)}  />\r\n\r\n          <button className=\"btn btn-primary mx-2 d-flex align-items-center\"\r\n          type=\"submit\">\r\n            <i className=\"fas fa-paper-plane me-2\" /> Gửi\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { IParams, FormSubmit } from '../../utils/typeScript'\r\n\r\nimport { resetPassword } from '../../redux/actions/userAction'\r\n\r\nexport const ResetPassword = () => {\r\n    const token = useParams<IParams>().slug\r\n    const dispatch = useDispatch()\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [cf_password, setCfPassword] = useState('')\r\n    const [typePass, setTypePass] = useState(false)\r\n    const [typeCfPass, setTypeCfPass] = useState(false)\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        dispatch(resetPassword(password, cf_password, token))\r\n    }\r\n\r\n    return (\r\n        <div className='auth_page'>\r\n            <form className='auth_box' onSubmit={handleSubmit}>\r\n                <h3 className='text-uppercase text-center mb-4'> \r\n                    Thay đổi mật khẩu\r\n                </h3>\r\n                <div className=\"form-group my-2\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Mật khẩu</label>\r\n                    \r\n                    <div className=\"pass\">\r\n                        <input type={typePass ? \"text\" : \"password\"} className='form-control' \r\n                        id='password' name='password' value={password} \r\n                        onChange={(e => setPassword(e.target.value))} \r\n                        placeholder='Nhập tối thiểu 6 ký tự'\r\n                        />\r\n\r\n                        <small onClick={() => setTypePass(!typePass)}>\r\n                            {typePass ? 'Ẩn' : 'Hiện'}\r\n                        </small>\r\n                    </div>   \r\n                </div>\r\n\r\n                <div className=\"form-group my-2\">\r\n                    <label htmlFor=\"password\" className=\"form-label\"> Xác nhận mật khẩu</label>\r\n                    \r\n                    <div className=\"pass\">\r\n                        <input type={typeCfPass ? \"text\" : \"password\"} className='form-control' \r\n                        id='password' name='password' value={cf_password} \r\n                        onChange={(e => setCfPassword(e.target.value))} \r\n                        placeholder='Nhập tối thiểu 6 ký tự'\r\n                        />\r\n\r\n                        <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                            {typeCfPass ? 'Ẩn' : 'Hiện'}\r\n                        </small>\r\n                    </div>   \r\n                </div>\r\n\r\n                <button type='submit' className='btn btn-dark w-100 mt-2'>\r\n                    Đăng ký\r\n                </button>\r\n            </form>\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default ResetPassword","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { IParams } from '../../utils/typeScript'\r\n\r\nimport CreateBlog from '../create_blog' \r\n\r\nconst UpdateBlog = () => {\r\n    //get ID blog\r\n    const { slug } = useParams<IParams>()\r\n\r\n    return <CreateBlog id={slug} />\r\n}\r\n\r\nexport default UpdateBlog\r\n","import jwt_decode from \"jwt-decode\"\r\nimport axios from 'axios'\r\n\r\nimport { AUTH } from '../redux/types/authType'\r\n\r\ninterface IToken {\r\n    exp: number\r\n    iat: number\r\n    id: string\r\n}\r\n\r\nexport const CheckTokenExpired = async (token: string, dispatch: any) => {\r\n    const decoded: IToken = jwt_decode(token)\r\n    // console.log(decoded)\r\n\r\n    if(decoded.exp >= Date.now() / 1000) return \r\n\r\n    const res = await axios.get('refresh_token')\r\n    dispatch({ type: AUTH, payload: res.data })\r\n    return res.data.access_token\r\n}","import React from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\n\r\n\r\ninterface IProps {\r\n  body: string\r\n  setBody: (value: string) => void\r\n}\r\n\r\nconst LiteQuill: React.FC<IProps> = ({body, setBody}) => {\r\n\r\n  const modules = { toolbar: { container }}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ReactQuill theme=\"snow\"\r\n        modules={modules}\r\n        placeholder=\"Viết bình luận...\"\r\n        onChange={e => setBody(e)}\r\n        value={body}\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nlet container = [\r\n  [{ 'font': [] }],\r\n  ['bold', 'italic', 'underline', 'strike'],        \r\n  ['blockquote', 'code-block', 'link'],\r\n  [{ 'color': [] }, { 'background': [] }],          \r\n  [{ 'script': 'sub'}, { 'script': 'super' }]\r\n]\r\n\r\nexport default LiteQuill","import React, { useState, useRef, useEffect } from 'react'\r\n\r\nimport { IComment } from '../../utils/typeScript'\r\n\r\nimport LiteQuill from '../editor/liteQuill'\r\n\r\ninterface IProps {\r\n    callback: (body: string) => void\r\n    edit?: IComment \r\n    setEdit?: (edit?: IComment) => void\r\n}\r\n\r\nconst Input: React.FC<IProps> = ({ callback, edit, setEdit }) => {\r\n\r\n    const [body, setBody] = useState('')\r\n    const divRef = useRef<HTMLDivElement>(null)\r\n\r\n    useEffect(() => {\r\n        if(edit) setBody(edit.content)\r\n    },[edit])\r\n    \r\n    const handleSubmit = () => {\r\n        const div = divRef.current\r\n        const text = (div?.innerText as string)\r\n        if(!text.trim()) {\r\n            if(setEdit) return setEdit(undefined)\r\n            return\r\n        }\r\n        \r\n        callback(body)\r\n\r\n        setBody('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           <LiteQuill body={body} setBody={setBody} />\r\n\r\n           <div ref={divRef} dangerouslySetInnerHTML={{\r\n               __html: body\r\n           }} style={{display: 'none'}} />\r\n\r\n           <button className='btn btn-dark ms-auto d-block px-4 mt-2' onClick={handleSubmit}>\r\n                { edit ? 'Cập nhập' : 'Gửi' }\r\n           </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { IUser } from '../../utils/typeScript'\r\n\r\ninterface IProps {\r\n    user: IUser\r\n}\r\nconst AvatarComment: React.FC<IProps> = ({ user }) => {\r\n    return (\r\n        <div className='avatar_comment'>\r\n            <img src={user.avatar} alt='avatar' />\r\n\r\n            <small className='d-block text-break'>\r\n                <Link to={`/profile/${user._id}`}>\r\n                    {user.name}\r\n                </Link>\r\n            </small>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AvatarComment\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { IUser } from '../../utils/typeScript'\r\n\r\ninterface IProps {\r\n    user: IUser\r\n    reply_user?: IUser \r\n}\r\n\r\nconst avatarReply: React.FC<IProps> = ({ user, reply_user }) => {\r\n    return (\r\n        <div className='avatar_reply'>\r\n            <img src={user.avatar} alt='avatar' />\r\n\r\n            <div className=\"ms-1\">\r\n                <small>\r\n                    <Link to={`/profile/${user._id}`} style={{ textDecoration: 'none'}}>\r\n                        { user.name } \r\n                    </Link>\r\n                </small>\r\n\r\n                <small className='avatar_reply_reply-text d-flex'>\r\n                    Phản hồi tới <Link className='ms-1' to={`/profile/${reply_user?._id}`}>\r\n                        { reply_user?.name }\r\n                    </Link>\r\n                </small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default avatarReply\r\n","import { Dispatch } from \"redux\"\r\n\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\nimport { \r\n    CREATE_COMMENT, \r\n    ICreateCommentType, \r\n    GET_COMMENTS, \r\n    IGetCommentsType,\r\n    REPLY_COMMENT,\r\n    IReplyCommentType,\r\n    UPDATE_COMMENT,\r\n    UPDATE_REPLY,\r\n    IUpdateCommentType,\r\n    DELETE_COMMENT,\r\n    DELETE_REPLY,\r\n    IDeleteCommentType\r\n} from \"../types/commentType\"\r\n\r\nimport { IComment } from \"../../utils/typeScript\"\r\nimport { postAPI, getAPI, patchAPI, deleteAPI } from \"../../utils/fetchData\"\r\nimport { CheckTokenExpired } from \"../../utils/checkTokenExpired\"\r\n\r\nexport const createComment = (data: IComment, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | ICreateCommentType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    try {\r\n        await postAPI('comment', data, access_token)\r\n\r\n        // dispatch({\r\n        //     type: CREATE_COMMENT,\r\n        //     payload: { ...res.data, user: data.user }\r\n        // })\r\n\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n    }\r\n}\r\n\r\nexport const getComments = (id: string, num: number) => \r\nasync(dispatch: Dispatch<IAlertType | IGetCommentsType>) => {\r\n    try {\r\n        let limit = 4\r\n\r\n        const res = await getAPI(`comments/blog/${id}?page=${num}&limit=${limit}`)\r\n        \r\n        dispatch({\r\n            type: GET_COMMENTS,\r\n            payload: {\r\n                data: res.data.comments,\r\n                total: res.data.total\r\n            }\r\n        })\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n    }\r\n}\r\n\r\nexport const replyComment = (data: IComment, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | IReplyCommentType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    try {\r\n        await postAPI('reply_comment', data, access_token)\r\n\r\n        // dispatch({\r\n        //     type: REPLY_COMMENT,\r\n        //     payload: { ...res.data, user: data.user, reply_user: data.reply_user }\r\n        // })\r\n\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n    }\r\n}\r\n\r\nexport const updateComment = (data: IComment, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | IUpdateCommentType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    try {\r\n        dispatch({\r\n            type: data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT,\r\n            payload: data\r\n        })\r\n\r\n        await patchAPI(`comment/${data._id}`, { data }, access_token)\r\n\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n    }\r\n}\r\n\r\nexport const deleteComment = (data: IComment, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | IDeleteCommentType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    try {\r\n        dispatch({\r\n            type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT,\r\n            payload: data\r\n        })\r\n\r\n        await deleteAPI(`comment/${data._id}`, access_token)\r\n\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n    }\r\n}","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { IComment, RootStore } from '../../utils/typeScript'\r\n\r\nimport { replyComment, updateComment, deleteComment } from '../../redux/actions/commentAction'\r\n\r\nimport Input from './Input'\r\n\r\ninterface IProps {\r\n    comment: IComment\r\n    showReply: IComment[]\r\n    setShowReply: (showReply: IComment[]) => void\r\n}\r\n\r\nconst CommentList: React.FC<IProps> = ({ children, comment, showReply, setShowReply }) => {\r\n    const [onReply, setOnReply] = useState(false)\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [edit, setEdit] = useState<IComment>()\r\n\r\n    const handleReply = (body: string) => {\r\n        if(!auth.user || !auth.access_token) return;\r\n\r\n        const data = {\r\n        user: auth.user,\r\n        blog_id: comment.blog_id,\r\n        blog_user_id: comment.blog_user_id,\r\n        content: body,\r\n        replyCM: [],\r\n        reply_user: comment.user,\r\n        comment_root: comment.comment_root || comment._id,\r\n        createdAt: new Date().toISOString()\r\n        }\r\n\r\n\r\n        setShowReply([data, ...showReply])\r\n        dispatch(replyComment(data, auth.access_token))\r\n        setOnReply(false)\r\n    }\r\n\r\n\r\n    const handleUpdate = (body: string) => {\r\n        if(!auth.user || !auth.access_token || !edit) return\r\n\r\n        if(body === edit.content) \r\n        return setEdit(undefined)\r\n        \r\n        const newComment = {...edit, content: body}\r\n        dispatch(updateComment(newComment, auth.access_token))\r\n        setEdit(undefined)\r\n    }\r\n\r\n    const handleDelete = (comment: IComment) => {\r\n        if(!auth.user || !auth.access_token) return\r\n        dispatch(deleteComment(comment, auth.access_token))\r\n\r\n    }\r\n\r\n    const Nav = (comment: IComment) => {\r\n        return(\r\n        <div>\r\n            <i className=\"fas fa-trash-alt mx-2\" \r\n            onClick={() => handleDelete(comment)} />\r\n            <i className=\"fas fa-edit me-2\"\r\n            onClick={() => setEdit(comment)} />\r\n        </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100\">\r\n        {\r\n            edit\r\n            ? <Input \r\n            callback={handleUpdate} \r\n            edit={edit}\r\n            setEdit={setEdit}\r\n            />\r\n\r\n            : <div className=\"comment_box\">\r\n                <div className=\"p-2\" dangerouslySetInnerHTML={{\r\n                __html: comment.content\r\n                }} />\r\n\r\n                <div className=\"d-flex justify-content-between p-2\">\r\n                <small style={{cursor: 'pointer'}}\r\n                onClick={() => setOnReply(!onReply)}>\r\n                    {onReply ? '- Hủy -' :'- Phản hồi -'}\r\n                </small>\r\n\r\n                <small className=\"d-flex\">\r\n                    <div className='comment_box_comment_nav'>\r\n                    {\r\n                        comment.blog_user_id === auth.user?._id\r\n                        ? comment.user._id === auth.user._id\r\n                            ? Nav(comment)\r\n                            : <i className=\"fas fa-trash-alt mx-2\"\r\n                            onClick={() => handleDelete(comment)} />\r\n                        : comment.user._id === auth.user?._id && Nav(comment)\r\n                    }\r\n                    </div>\r\n\r\n                    <div>\r\n                    { new Date(comment.createdAt).toLocaleString() }\r\n                    </div>\r\n                </small>\r\n                </div>\r\n\r\n            </div>\r\n        }\r\n\r\n        {\r\n            onReply && <Input callback={handleReply} />\r\n        }\r\n        \r\n        { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentList\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { IComment } from '../../utils/typeScript'\r\n\r\nimport AvatarComment from './avatarComment'\r\nimport AvatarReply from './avatarReply'\r\nimport CommentList from './commentList'\r\n\r\ninterface IProps {\r\n    comment: IComment\r\n}\r\n\r\nconst Comments: React.FC<IProps> = ({ comment }) => {\r\n    const [showReply, setShowReply] = useState<IComment[]>([])\r\n    const [next, setNext] = useState(2)\r\n\r\n    useEffect(() => {\r\n        if(!comment.replyCM) return\r\n        setShowReply(comment.replyCM)\r\n    },[comment.replyCM])\r\n    return (\r\n        <div className='my-3 d-flex' style={{ \r\n            opacity: comment._id ? 1 : 0.5, \r\n            pointerEvents: comment._id ? 'initial' : 'none' \r\n        }}>\r\n            { <AvatarComment user={comment.user} /> }\r\n\r\n            <CommentList comment={comment} showReply={showReply} setShowReply={setShowReply}>\r\n                {\r\n                    showReply.slice(0,next).map((comment, index) => (\r\n                        <div key={index} style={{ \r\n                            opacity: comment._id ? 1 : 0.5, \r\n                            pointerEvents: comment._id ? 'initial' : 'none' \r\n                        }}>\r\n                            <AvatarReply \r\n                                user={comment.user}\r\n                                reply_user={comment.reply_user}\r\n                            />\r\n\r\n                            <CommentList \r\n                                comment={comment} \r\n                                showReply={showReply} \r\n                                setShowReply={setShowReply}\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            <div style={{ cursor: 'pointer' }}>\r\n                {\r\n                    showReply.length - next> 0\r\n                    // plus 5 comments when show\r\n                    ? <small style={{ color: 'crimson' }} onClick={() => setNext(next + 5)}>\r\n                        Xem thêm bình luận...\r\n                    </small>\r\n                    : showReply.length > 2 && \r\n                    //show 2 first comments if comments > 2 when hide\r\n                    <small style={{ color: 'teal' }} onClick={() => setNext(2)}>\r\n                        Ẩn bớt bình luận...\r\n                    </small>\r\n                }\r\n            </div>\r\n\r\n            </CommentList>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport { IBlog, RootStore, IUser, IComment } from '../../utils/typeScript'\r\n\r\nimport Input from '../comments/Input'\r\nimport Comments from '../comments/Comments'\r\n\r\nimport Loading from '../global/Loading'\r\nimport Pagination from '../global/Pagination'\r\n\r\nimport { createComment, getComments } from '../../redux/actions/commentAction'\r\n\r\ninterface IProps {\r\n  blog: IBlog\r\n}\r\n\r\nconst DisplayBlog: React.FC<IProps> = ({blog}) => {\r\n  const { auth, comments } = useSelector((state: RootStore) => state)\r\n  const dispatch = useDispatch()\r\n\r\n  const [showComments, setShowComments] = useState<IComment[]>([])\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n\r\n  const handleComment = (body: string) => {\r\n    if(!auth.user || !auth.access_token) return;\r\n\r\n    const data = {\r\n      content: body,\r\n      user: auth.user,\r\n      blog_id: (blog._id as string),\r\n      blog_user_id: (blog.user as IUser)._id,\r\n      replyCM: [],\r\n      createdAt: new Date().toISOString()\r\n    }\r\n\r\n    setShowComments([data, ...showComments])\r\n    dispatch(createComment(data, auth.access_token))\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    setShowComments(comments.data)\r\n  },[comments.data])\r\n\r\n\r\n  const fetchComments = useCallback(async(id: string, num = 1) => {\r\n    setLoading(true)\r\n    await dispatch(getComments(id, num))\r\n    setLoading(false)\r\n  },[dispatch])\r\n\r\n  useEffect(() => {\r\n    if(!blog._id) return\r\n    const num = history.location.search.slice(6) || 1\r\n    fetchComments(blog._id, num)\r\n  },[blog._id, fetchComments, history])\r\n\r\n  const handlePagination = (num: number) => {\r\n    if(!blog._id) return\r\n    fetchComments(blog._id, num)\r\n  } \r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-center my-3 text-capitalize fs-1\"\r\n      style={{ color: '#ff7a00' }}>\r\n        {blog.title}\r\n      </h2>\r\n\r\n      <div className=\"text-end fst-italic\" style={{color: 'teal'}}>\r\n        <small>\r\n          {\r\n            typeof(blog.user) !== 'string' &&\r\n            `Viết bởi: ${blog.user.name}`\r\n          }\r\n        </small>\r\n\r\n        <small className=\"ms-2\">\r\n          { new Date(blog.createdAt).toLocaleString() }\r\n        </small>\r\n      </div>\r\n\r\n      <div dangerouslySetInnerHTML={{\r\n        __html: blog.content\r\n      }} />\r\n\r\n      <hr className='my-1' />\r\n\r\n      <h3 style={{color: '#ff7a00'}}>✡︎ Bình luận ✡︎</h3>\r\n\r\n      {\r\n        auth.user \r\n        ? <Input  callback={handleComment} /> \r\n        : <h5>\r\n            Xin vui lòng <Link to={`/login?blog/${blog._id}`}>đăng nhập</Link> để bình luận.\r\n          </h5>\r\n      }\r\n      \r\n      {\r\n        loading\r\n        ? <Loading />\r\n        : showComments?.map((comment, index) => (\r\n          <Comments key={index} comment={comment} />\r\n        ))\r\n      }\r\n\r\n      {\r\n        comments.total > 1 &&\r\n        <Pagination \r\n        total={comments.total}\r\n        callback={handlePagination}\r\n        />\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DisplayBlog","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { IParams, IBlog, RootStore } from '../../utils/typeScript'\r\nimport { getAPI } from '../../utils/fetchData'\r\n\r\nimport Loading from '../../components/global/Loading'\r\nimport { showErrMsg } from '../../components/alert/Alert'\r\nimport DisplayBlog from '../../components/blog/displayBlog'\r\n\r\nconst DetailBlog = () => {\r\n  const id = useParams<IParams>().slug\r\n  const { socket } = useSelector((state: RootStore) => state)\r\n\r\n  const [blog, setBlog] = useState<IBlog>()\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  useEffect(() => {\r\n    if(!id) return;\r\n\r\n    setLoading(true)\r\n\r\n    getAPI(`blog/${id}`)\r\n    .then(res => {\r\n      setBlog(res.data)\r\n      setLoading(false)\r\n    })\r\n    .catch(err => {\r\n      setError(err.response.data.msg)\r\n      setLoading(false)\r\n    })\r\n\r\n    return () => setBlog(undefined)\r\n  },[id])\r\n\r\n  // Join Room\r\n  useEffect(() => {\r\n    if(!id || !socket) return\r\n    socket.emit('joinRoom', id)\r\n    \r\n    return () => {\r\n      socket.emit('outRoom', id)\r\n    }\r\n\r\n  },[socket, id])\r\n\r\n  if(loading) return <Loading />;\r\n  return (\r\n    <div className=\"my-4\">\r\n      { error && showErrMsg(error) }\r\n      \r\n      { blog && <DisplayBlog blog={blog} /> }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DetailBlog","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { InputChange, FormSubmit } from '../../utils/typeScript'\r\nimport { login } from '../../redux/actions/authAction'\r\n\r\nconst LoginPass = () => {\r\n    const initialState =  { account: '', password: '' }\r\n    const [userLogin, setUserLogin] = useState(initialState)\r\n    const { account, password } = userLogin\r\n\r\n    const [typePass, setTypePass] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChangeInput = (e: InputChange) => {\r\n        const { value, name } = e.target\r\n        setUserLogin({...userLogin, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        dispatch(login(userLogin))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"account\" className=\"form-label\">Email / Số điện thoại</label>\r\n                <input type=\"text\" className='form-control' id='account' name='account' \r\n                value={account} onChange={handleChangeInput} />\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label\">Mật khẩu</label>\r\n                \r\n                <div className=\"pass\">\r\n                    <input type={typePass ? \"text\" : \"password\"} \r\n                    className='form-control' \r\n                    id='password' \r\n                    name='password' \r\n                    value={password} \r\n                    onChange={handleChangeInput} \r\n                    />\r\n\r\n                    <small onClick={() => setTypePass(!typePass)}>\r\n                        {typePass ? 'Ẩn' : 'Hiện'}\r\n                    </small>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <button type='submit' className='btn btn-dark w-100 mt-1'>\r\n            {/* disabled={(account && password) ? false : true} */}\r\n                Đăng Nhập\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginPass\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { FormSubmit } from '../../utils/typeScript'\r\nimport { loginSMS } from '../../redux/actions/authAction'\r\n\r\nconst LoginSMS = () => {\r\n    const [phone, setPhone] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        dispatch(loginSMS(phone))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n           <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"phone\" className='form-label'>Số điện thoại</label>\r\n\r\n                <input type='text' className='form-control' id='phone' value={phone} \r\n                onChange={e => setPhone(e.target.value)} placeholder='+84'/>\r\n            </div> \r\n\r\n            <button type=\"submit\" className='btn btn-dark w-100' >\r\n            {/* disabled={phone ? false : true} */}\r\n                Đăng nhập\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default LoginSMS\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { FacebookLogin, FacebookLoginAuthResponse } from 'react-facebook-login-lite'\r\nimport { GoogleLogin, GoogleLoginResponse } from 'react-google-login-lite'\r\n\r\nimport { googleLogin, facebookLogin } from '../../redux/actions/authAction'\r\n\r\nconst SocialLogin = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onSuccess = (googleUser: GoogleLoginResponse) => {\r\n        //console.log(googleUser);\r\n        const id_token = googleUser.getAuthResponse().id_token\r\n        dispatch(googleLogin(id_token))\r\n    }\r\n\r\n    const onFBSuccess = (response: FacebookLoginAuthResponse) => {\r\n        const { accessToken, userID } = response.authResponse\r\n        // console.log({ accessToken, userID })\r\n        dispatch(facebookLogin(accessToken, userID))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='my-2'>\r\n                <GoogleLogin \r\n                    client_id='548466254886-h56eslmprphtvkuisnlumlp6o2ivbqjq.apps.googleusercontent.com'\r\n                    cookiepolicy='single_host_origin'\r\n                    onSuccess={onSuccess}\r\n                />\r\n            </div>\r\n\r\n            <div className='my-2'>\r\n                <FacebookLogin \r\n                    appId=\"333953021722051\"\r\n                    onSuccess={onFBSuccess}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SocialLogin\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport LoginPass from '../components/auth/LoginPass'\r\nimport LoginSMS from '../components/auth/LoginSMS'\r\nimport SocialLogin from '../components/auth/socialLogin'\r\n\r\nimport { RootStore } from '../utils/typeScript'\r\n\r\nconst Login = () => {\r\n    const [sms, setSms] = useState(false)\r\n    const history = useHistory()\r\n\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n\r\n    useEffect(() => {\r\n        if(auth.access_token){\r\n            let url = history.location.search.replace('?', '/')\r\n            return history.push(url)\r\n        }\r\n    },[auth.access_token, history])\r\n\r\n    return (\r\n        <div className ='auth_page'>\r\n            <div className=\"auth_box\">\r\n                <h3 className='text-uppercase text-center mb-4'>Đăng Nhập</h3>\r\n\r\n                <SocialLogin />\r\n\r\n                {sms ? <LoginSMS /> : <LoginPass />}\r\n\r\n                <small className='row my-2 text-primary' style={{cursor: 'pointer'}}>\r\n\r\n                    <span className='col-6'>\r\n                    <Link to='/forgot_password' className='col-6'>\r\n                        Quên mật khẩu?\r\n                    </Link>\r\n                    </span>\r\n                   \r\n                    <span className='col-6 text-center' onClick={() => setSms(!sms)}>\r\n                        {sms ? 'Đăng nhập bằng mật khẩu' : 'Đăng nhập bằng SMS'}\r\n                    </span>\r\n                </small>\r\n\r\n                <p>\r\n                    {`Bạn chưa có tài khoản?`}\r\n                    <Link to={`/register${history.location.search}`} style={{color: 'crimson'}}>\r\n                         Đăng ký \r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { RootStore, InputChange, IUserProfile, FormSubmit } from '../../utils/typeScript'\r\n\r\nimport NotFound from '../global/notFound'\r\n\r\nimport { updateUser, resetPassword } from '../../redux/actions/userAction'\r\n\r\nconst UserInfo = () => {\r\n    const initState = {\r\n        name: '', account: '', avatar: '', password: '', cf_password: ''\r\n    };\r\n\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [user, setUser] = useState<IUserProfile>(initState)\r\n    const [typePass, setTypePass] = useState(false)\r\n    const [typeCfPass, setTypeCfPass] = useState(false)\r\n\r\n    const handleChangeInput = (e: InputChange) => {\r\n        const { name, value } = e.target\r\n        setUser({ ...user, [name]:value })\r\n    }\r\n\r\n    const handleChangeFile = (e: InputChange) => {\r\n        const target = e.target as HTMLInputElement\r\n        const files = target.files\r\n\r\n        if(files){\r\n            const file = files[0]\r\n            setUser({...user, avatar: file})\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        if(avatar || name)\r\n            dispatch(updateUser((avatar as File), name, auth))\r\n\r\n        if(password && auth.access_token)\r\n            dispatch(resetPassword(password, cf_password, auth.access_token))\r\n    }\r\n\r\n    const { name, avatar, password, cf_password } = user\r\n\r\n    if(!auth.user) return <NotFound />\r\n    return (\r\n        <form className='profile_info' onSubmit={handleSubmit}>\r\n            <div className='profile_info_info_avatar'>\r\n                <img src={avatar ? URL.createObjectURL(avatar) : auth.user.avatar} alt ='avatar' />\r\n\r\n                <span>\r\n                    {/* Change profile picture */}\r\n                    <i className='fas fa-camera' />\r\n                    <p>Change</p>\r\n                    <input type='file' accept='image/*' name='file' id='file_up'\r\n                    onChange={handleChangeFile}/>\r\n                </span>\r\n            </div>\r\n        \r\n            <div className=\"form-group my-3\">\r\n                <label htmlFor='name'>Họ và tên</label>\r\n                <input type=\"text\" className='form-control' id='name' name='name'\r\n                defaultValue={auth.user.name} onChange={handleChangeInput} />\r\n            </div>\r\n            \r\n            <div className=\"form-group my-3\">\r\n                <label htmlFor='account'>Tài khoản</label>\r\n                <input type=\"text\" className='form-control' id='account' name='account'\r\n                defaultValue={auth.user.account} onChange={handleChangeInput} disabled={true} />\r\n            </div>\r\n\r\n            {\r\n                auth.user.type !== 'register' &&\r\n                <small className=\"text-danger\">\r\n                    * Tài khoản đăng nhập bằng {auth.user.type} không thể sử dụng chức năng này *\r\n                </small>\r\n            }\r\n\r\n            <div className=\"form-group my-3\">\r\n                <label htmlFor='password'>Mật khẩu</label>\r\n                <div className='profile_info_pass'>\r\n                <input type={typePass ? 'text' : 'password'}\r\n                className='form-control' id='password' name='password' value={password} \r\n                onChange={handleChangeInput} disabled={auth.user.type !== 'register'} />\r\n\r\n                <small onClick={() => setTypePass(!typePass)}>\r\n                    { typePass ? 'Ẩn' : 'Hiện' }\r\n                </small>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group my-3\">\r\n                <label htmlFor='cf_password'>Xác thực mật khẩu</label>\r\n                <div className='profile_info_pass'>\r\n                <input type={typePass ? 'text' : 'password'}\r\n                className='form-control' id='cf_password' name='cf_password'value={cf_password} \r\n                onChange={handleChangeInput}  disabled={auth.user.type !== 'register'} />\r\n\r\n                <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                    { typeCfPass ? 'Ẩn' : 'Hiện' }\r\n                </small>\r\n                </div>\r\n            </div>\r\n\r\n            <button className='btn btn-dark w-100' type='submit'>\r\n                Cập nhập\r\n            </button>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UserInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getOtherInfo } from '../../redux/actions/userAction'\r\n\r\nimport { RootStore, IUser } from '../../utils/typeScript'\r\n\r\nimport Loading from '../global/Loading'\r\n\r\ninterface IProps{\r\n    id: string\r\n}\r\n\r\nconst OtherInfo: React.FC<IProps>  = ({id}) => {\r\n    const [other, setOther] = useState<IUser>()\r\n\r\n    const { otherInfo } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() =>{\r\n        if(!id) return\r\n\r\n        if(otherInfo.every(user => user._id !== id)){\r\n            dispatch(getOtherInfo(id))\r\n        }else{\r\n            const newUser = otherInfo.find(user => user._id === id)\r\n            if(newUser) setOther(newUser)\r\n        }\r\n        \r\n    },[id, otherInfo, dispatch])\r\n\r\n    if(!other) return <Loading />\r\n\r\n    return (\r\n        <div className='profile_info text-center rounded'>\r\n            <div className=\"profile_info_info_avatar\">\r\n                <img src={other.avatar} alt='avatar' />\r\n            </div>\r\n\r\n            <h5 className='text-uppercase text-danger'>\r\n                {other.role}\r\n            </h5>\r\n\r\n            <div>\r\n                Tên người dùng: <span className='text-info'>{other.name}</span>\r\n            </div>\r\n\r\n            <div>Email / Số điện thoại</div>\r\n            <span className='text-info'>{other.account}</span>\r\n\r\n            <div>\r\n                Ngày tham gia: <span style={{color: '#ffc107'}}>\r\n                    { new Date(other.createdAt).toLocaleString() }\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OtherInfo\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams, useHistory } from 'react-router'\r\n\r\nimport { IParams, RootStore, IBlog } from '../../utils/typeScript'\r\n\r\nimport { getBlogsByUserId } from '../../redux/actions/blogAction'\r\n\r\nimport CardHoriz from '../cards/cardHoriz'\r\n\r\nimport Loading from '../global/Loading'\r\nimport Pagination from '../global/Pagination'\r\n\r\nconst UserBlogs = () => {\r\n    const { blogsUser } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n    const user_id = useParams<IParams>().slug\r\n\r\n    const [blogs, setBlogs] = useState<IBlog[]>()\r\n    const [total, setTotal] = useState(0)\r\n\r\n    const history = useHistory()\r\n    const { search } = history.location\r\n\r\n    useEffect(() =>{\r\n        if(!user_id) return\r\n\r\n        if(blogsUser.every(item => item.id !== user_id)){\r\n            dispatch(getBlogsByUserId(user_id, search))\r\n        }else{\r\n            const data = blogsUser.find(item => item.id === user_id)\r\n            if(!data) return\r\n\r\n            setBlogs(data.blogs)\r\n            setTotal(data.total)\r\n            if(data.search) history.push(data.search)\r\n        }\r\n            \r\n    },[user_id, blogsUser, dispatch, search, history])\r\n\r\n    const handlePagination = (num: number) => {\r\n        const search = `?page=${num}`\r\n        dispatch(getBlogsByUserId(user_id, search))\r\n    }\r\n\r\n    if(!blogs) return <Loading />\r\n\r\n    // If last blog deleted in pagination\r\n    if(blogs.length === 0 && total < 1) return(\r\n        <h3 className='text-center'>Không có blog nào được tìm thấy</h3>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                {\r\n                    blogs.map(blog =>(\r\n                        <CardHoriz key={blog._id} blog={blog} />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div>\r\n                    <Pagination \r\n                    total={total}\r\n                    callback={handlePagination}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserBlogs\r\n","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { IParams, RootStore } from '../../utils/typeScript'\r\n\r\nimport UserInfo from '../../components/profile/userInfo'\r\nimport OtherInfo from '../../components/profile/otherInfo'\r\nimport UserBlogs from '../../components/profile/userBlogs';\r\n\r\nconst Profile = () => {\r\n    const { slug }: IParams = useParams()\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n\r\n    console.log({userID: slug})\r\n\r\n    return (\r\n        <div className='row my-3'>\r\n            <div className=\"col-md-5 mb-3\">\r\n                {\r\n                    auth.user?._id === slug ? <UserInfo /> : <OtherInfo id={slug} />\r\n                }\r\n            </div>\r\n\r\n            <div className=\"col-md-7\">\r\n                <UserBlogs />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { InputChange, FormSubmit } from '../../utils/typeScript'\r\nimport { register } from '../../redux/actions/authAction'\r\n\r\nconst RegisterForm = () => {\r\n    const initialState =  { name: '', account: '', password: '', cf_password: '' }\r\n    const [userRegister, setuserRegister] = useState(initialState)\r\n    const { name, account, password, cf_password } = userRegister\r\n\r\n    const [typePass, setTypePass] = useState(false)\r\n    const [typeCfPass, setTypeCfPass] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChangeInput = (e: InputChange) => {\r\n        const { value, name } = e.target\r\n        setuserRegister({...userRegister, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = (e: FormSubmit) => {\r\n        e.preventDefault()\r\n        dispatch(register(userRegister))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"name\" className=\"form-label\">Họ và tên</label>\r\n                <input type=\"text\" className='form-control' id='name' name='name' \r\n                value={name} onChange={handleChangeInput}\r\n                placeholder='Nhập tối đa 20 ký tự'/>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"account\" className=\"form-label\">Email / Số điện thoại</label>\r\n                <input type=\"text\" className='form-control' id='account' name='account' \r\n                value={account} onChange={handleChangeInput}\r\n                placeholder='abc@gmail.com/+84911044831' />\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label\">Mật khẩu</label>\r\n                \r\n                <div className=\"pass\">\r\n                    <input type={typePass ? \"text\" : \"password\"} className='form-control' \r\n                    id='password' name='password' value={password} onChange={handleChangeInput} \r\n                    placeholder='Nhập tối thiểu 6 ký tự'\r\n                    />\r\n\r\n                    <small onClick={() => setTypePass(!typePass)}>\r\n                        {typePass ? 'Ẩn' : 'Hiện'}\r\n                    </small>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"form-group mb-3\">\r\n                <label htmlFor=\"password\" className=\"form-label\">Xác nhận mật khẩu</label>\r\n                \r\n                <div className=\"pass\">\r\n                    <input type={typeCfPass ? \"text\" : \"password\"} className='form-control' \r\n                    id='cf_password' name='cf_password' value={cf_password} \r\n                    onChange={handleChangeInput} placeholder='Nhập lại mật khẩu của bạn' \r\n                    />\r\n\r\n                    <small onClick={() => setTypeCfPass(!typeCfPass)}>\r\n                        {typeCfPass ? 'Ẩn' : 'Hiện'}\r\n                    </small>\r\n                </div>    \r\n            </div>\r\n\r\n            <button type='submit' className='btn btn-dark w-100 my-1'>\r\n            {/* disabled={(account && password) ? false : true}  */} \r\n                Đăng Ký\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegisterForm\r\n","import React from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nimport RegisterForm from '../components/auth/registerForm'\r\nimport LoginSMS from '../components/auth/LoginSMS'\r\n\r\nconst Register = () => {  \r\n    const history = useHistory() \r\n\r\n    return (\r\n        <div className ='auth_page'>\r\n            <div className=\"auth_box\">\r\n                <h3 className='text-uppercase text-center mb-4'>Đăng Ký</h3>\r\n\r\n                <RegisterForm />\r\n\r\n                <p className='mt-2'>\r\n                    {`Đã có tài khoản?`}\r\n                    <Link to={`/login${history.location.search}`} style={{color: 'crimson'}}>\r\n                         Đăng nhập ngay\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import { Dispatch } from 'redux'\r\nimport { AUTH , IAuthType } from '../types/authType'\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\n\r\nimport { IUserLogin, IUserRegister } from '../../utils/typeScript'\r\nimport { postAPI, getAPI } from '../../utils/fetchData'\r\nimport { validRegister, validPhone } from '../../utils/Valid'\r\nimport { CheckTokenExpired } from '../../utils/checkTokenExpired'\r\n\r\nexport const login = (userLogin: IUserLogin) => async (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('login', userLogin)\r\n\r\n        dispatch({ type:'AUTH', payload: res.data })\r\n\r\n        dispatch({ type: ALERT, payload: { success: res.data.msg }})\r\n        localStorage.setItem('logged', 'LongHoangPhamBlog')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const register = (userRegister: IUserRegister) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    const check = validRegister(userRegister)\r\n\r\n    if(check.errLength > 0)\r\n        return dispatch({ type: ALERT, payload: { errors: check.errMsg }})\r\n    console.log(check)\r\n     \r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI(`register`, userRegister)\r\n        console.log(res)\r\n        \r\n        dispatch({ type: ALERT, payload: { success: res.data.msg }})\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const refreshToken = () => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    const logged = localStorage.getItem('logged')\r\n    if(logged !== 'LongHoangPhamBlog') return;\r\n\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await getAPI('refresh_token')\r\n        \r\n        dispatch({ type: ALERT, payload: res.data })\r\n        \r\n        dispatch({ type: ALERT, payload: {  }})\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n        localStorage.removeItem('logged')\r\n    }\r\n}\r\n\r\nexport const logout = async (token: string) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    try {\r\n        localStorage.removeItem('logged')\r\n        dispatch({ type: AUTH, payload: { } })\r\n        await getAPI('logout', access_token)    \r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const googleLogin = (id_token: string) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('google_login', { id_token })\r\n\r\n        dispatch({ type:'AUTH',payload:  res.data })\r\n\r\n        dispatch({ type: ALERT, payload: { success: res.data.msg }})\r\n        localStorage.setItem('logged', 'LongHoangPhamBlog')\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const facebookLogin = (accessToken: string, userID: string) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n  try {\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n\r\n    const res = await postAPI('facebook_login', { accessToken, userID })\r\n    \r\n    dispatch({ type: AUTH,payload: res.data })\r\n\r\n    dispatch({ type: ALERT, payload: { success: res.data.msg } })\r\n    localStorage.setItem('logged', 'LongHoangPhamBlog')\r\n    \r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: { errors: err.response.data.msg } })\r\n  }\r\n}\r\n\r\nexport const loginSMS = (phone: string) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    const check = validPhone(phone)\r\n    console.log(check)\r\n    if(!check) \r\n        return dispatch({ \r\n            type: ALERT, payload: { errors: 'số điện thoại không đúng, xin vui lòng nhập lại!' }\r\n        }); \r\n\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('login_sms', { phone })\r\n\r\n        if(!res.data.valid)\r\n            verifySMS(phone, dispatch)\r\n\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const verifySMS = async (phone: string, dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n\r\n    const code = prompt('Enter your code')\r\n    if(!code) return;\r\n\r\n    try {\r\n\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('sms_verify', { phone, code })\r\n\r\n        dispatch({ type:'AUTH',payload:  res.data })\r\n\r\n        dispatch({ type: ALERT, payload: { success: res.data.msg }})\r\n        localStorage.setItem('logged', 'LongHoangPhamBlog')\r\n\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n        setTimeout(() => {\r\n            verifySMS(phone, dispatch)\r\n        }, 100)\r\n        \r\n    }\r\n\r\n    \r\n}\r\n\r\nexport const forgotPassword = (account: string) => \r\nasync (dispatch: Dispatch<IAuthType | IAlertType>) => {\r\n    \r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('forgot_password', {account})\r\n\r\n        // console.log(res)\r\n\r\n        dispatch({ type: ALERT, payload: { success: res.data.msg }})\r\n        \r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}","var map = {\n\t\"./\": 77,\n\t\"./active/[slug]\": 92,\n\t\"./active/[slug].tsx\": 92,\n\t\"./blog/[slug]\": 142,\n\t\"./blog/[slug].tsx\": 142,\n\t\"./blogs/[slug]\": 124,\n\t\"./blogs/[slug].tsx\": 124,\n\t\"./category\": 125,\n\t\"./category.tsx\": 125,\n\t\"./create_blog\": 71,\n\t\"./create_blog.tsx\": 71,\n\t\"./forgot_password\": 126,\n\t\"./forgot_password.tsx\": 126,\n\t\"./index\": 77,\n\t\"./index.tsx\": 77,\n\t\"./login\": 143,\n\t\"./login.tsx\": 143,\n\t\"./profile/[slug]\": 144,\n\t\"./profile/[slug].tsx\": 144,\n\t\"./register\": 145,\n\t\"./register.tsx\": 145,\n\t\"./reset_password/[slug]\": 127,\n\t\"./reset_password/[slug].tsx\": 127,\n\t\"./update_blog/[slug]\": 128,\n\t\"./update_blog/[slug].tsx\": 128\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 162;","import { IBlog } from \"../../utils/typeScript\"\r\n\r\nexport const GET_HOME_BLOGS = 'GET_HOME_BLOGS'\r\nexport const GET_BLOGS_CATEGORY_ID = 'GET_BLOGS_CATEGORY_ID'\r\nexport const GET_BLOGS_USER_ID = 'GET_BLOGS_USER_ID'\r\nexport const CREATE_BLOGS_USER_ID = 'CREATE_BLOGS_USER_ID'\r\nexport const DELETE_BLOGS_USER_ID = 'DELETE_BLOGS_USER_ID'\r\n\r\nexport interface IHomeBlogs{\r\n    _id: string\r\n    name: string\r\n    count: number\r\n    blogs: IBlog[]\r\n}\r\n\r\nexport interface IGetHomeBlogsType {\r\n    type: typeof GET_HOME_BLOGS,\r\n    payload: IHomeBlogs[]\r\n}\r\nexport interface IBlogsCategory{\r\n    id: string\r\n    blogs: IBlog[]\r\n    total: number\r\n    search: string\r\n}\r\n\r\nexport interface IGetBlogsCategoryType {\r\n    type: typeof GET_BLOGS_CATEGORY_ID,\r\n    payload: IBlogsCategory\r\n}\r\n\r\nexport interface IBlogsUser{\r\n    id: string\r\n    blogs: IBlog[]\r\n    total: number\r\n    search: string\r\n}\r\n\r\nexport interface IGetBlogsUserType {\r\n    type: typeof GET_BLOGS_USER_ID,\r\n    payload: IBlogsUser\r\n}\r\n\r\nexport interface ICreateBlogsUserType {\r\n    type: typeof CREATE_BLOGS_USER_ID,\r\n    payload: IBlog\r\n}\r\n\r\nexport interface IDeleteBlogsUserType {\r\n    type: typeof DELETE_BLOGS_USER_ID,\r\n    payload: IBlog\r\n}\r\n\r\nexport type IBlogUserType =\r\n| IGetBlogsUserType\r\n| ICreateBlogsUserType\r\n| IDeleteBlogsUserType","import { Dispatch } from 'redux'\r\nimport { IBlog } from '../../utils/typeScript'\r\nimport { imageUpload } from '../../utils/imageUpload'\r\nimport { postAPI, getAPI, putAPI, deleteAPI } from '../../utils/fetchData'\r\n\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\n\r\nimport {\r\n  GET_HOME_BLOGS,\r\n  IGetHomeBlogsType,\r\n  GET_BLOGS_CATEGORY_ID,\r\n  IGetBlogsCategoryType,\r\n  GET_BLOGS_USER_ID,\r\n  IGetBlogsUserType,\r\n  CREATE_BLOGS_USER_ID,\r\n  ICreateBlogsUserType,\r\n  DELETE_BLOGS_USER_ID,\r\n  IDeleteBlogsUserType\r\n} from '../types/blogType'\r\n\r\nimport { CheckTokenExpired } from '../../utils/checkTokenExpired'\r\n\r\nexport const createBlog = (blog: IBlog, token: string) => \r\nasync (dispatch: Dispatch<IAlertType | ICreateBlogsUserType>) => {\r\n  const result = await CheckTokenExpired(token, dispatch)\r\n  const access_token = result ? result : token\r\n\r\n  let url;\r\n  try {\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n    \r\n    if(typeof(blog.thumbnail) !== 'string'){\r\n      const photo = await imageUpload(blog.thumbnail)\r\n      url = photo.url\r\n    }else{\r\n      url = blog.thumbnail\r\n    }\r\n    \r\n    const newBlog = {...blog, thumbnail: url}\r\n    \r\n    const res = await postAPI('blog', newBlog, access_token)\r\n\r\n    dispatch({\r\n      type: CREATE_BLOGS_USER_ID,\r\n      payload: res.data\r\n    })\r\n\r\n    dispatch({ type: ALERT, payload: { loading: false } })\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}\r\n\r\n\r\nexport const getHomeBlogs = () => \r\nasync (dispatch: Dispatch<IAlertType | IGetHomeBlogsType>) => {\r\n  try {\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n\r\n    const res = await getAPI('home/blogs')\r\n\r\n    dispatch({\r\n      type: GET_HOME_BLOGS,\r\n      payload: res.data\r\n    })\r\n    \r\n    dispatch({ type: ALERT, payload: { loading: false } })\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}\r\n\r\n\r\nexport const getBlogsByCategoryId = (id: string, search: string) => \r\nasync (dispatch: Dispatch<IAlertType | IGetBlogsCategoryType>) => {\r\n  try {\r\n    let limit = 8;\r\n    let value = search ? search : `?page=${1}`;\r\n\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n\r\n    const res = await getAPI(`blogs/category/${id}${value}&limit=${limit}`)\r\n\r\n    dispatch({\r\n      type: GET_BLOGS_CATEGORY_ID,\r\n      payload: {...res.data, id, search }\r\n    })\r\n    \r\n    dispatch({ type: ALERT, payload: { loading: false } })\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}\r\n\r\n\r\nexport const getBlogsByUserId = (id: string, search: string) => \r\nasync (dispatch: Dispatch<IAlertType | IGetBlogsUserType>) => {\r\n  try {\r\n    let limit = 3;\r\n    let value = search ? search : `?page=${1}`;\r\n\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n\r\n    const res = await getAPI(`blogs/user/${id}${value}&limit=${limit}`)\r\n\r\n    dispatch({\r\n      type: GET_BLOGS_USER_ID,\r\n      payload: {...res.data, id, search }\r\n    })\r\n    \r\n    dispatch({ type: ALERT, payload: { loading: false } })\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}\r\n\r\n\r\nexport const updateBlog = (blog: IBlog, token: string) => \r\nasync (dispatch: Dispatch<IAlertType>) => {\r\n  const result = await CheckTokenExpired(token, dispatch)\r\n  const access_token = result ? result : token\r\n  let url;\r\n  try {\r\n    dispatch({ type: ALERT, payload: { loading: true } })\r\n    \r\n    if(typeof(blog.thumbnail) !== 'string'){\r\n      const photo = await imageUpload(blog.thumbnail)\r\n      url = photo.url\r\n    }else{\r\n      url = blog.thumbnail\r\n    }\r\n    \r\n    const newBlog = {...blog, thumbnail: url}\r\n\r\n    const res = await putAPI(`blog/${newBlog._id}`, newBlog, access_token)\r\n\r\n    dispatch({ type: ALERT, payload: { success: res.data.msg } })\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}\r\n\r\n\r\nexport const deleteBlog = (blog: IBlog, token: string) => \r\nasync (dispatch: Dispatch<IAlertType | IDeleteBlogsUserType>) => {\r\n  const result = await CheckTokenExpired(token, dispatch)\r\n  const access_token = result ? result : token\r\n  try {\r\n    dispatch({\r\n      type: DELETE_BLOGS_USER_ID,\r\n      payload: blog\r\n    })\r\n\r\n    await deleteAPI(`blog/${blog._id}`, access_token)\r\n\r\n  } catch (err: any) {\r\n    dispatch({ type: ALERT, payload: {errors: err.response.data.msg} })\r\n  }\r\n}","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center my-4\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"visually-hidden\">Đang tải...</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { IAlert } from '../../utils/typeScript'\r\n\r\nexport const ALERT = 'ALERT'\r\n\r\nexport interface IAlertType {\r\n    type: typeof ALERT\r\n    payload: IAlert\r\n}","import { ICategory } from '../../utils/typeScript';\r\n\r\nexport const CREATE_CATEGORY = 'CREATE_CATEGORY'\r\nexport const GET_CATEGORIES = 'GET_CATEGORIES'\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY'\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\r\n\r\nexport interface ICreateCategory {\r\n    type: typeof CREATE_CATEGORY\r\n    payload: ICategory\r\n}\r\n\r\nexport interface IGetCategories {\r\n    type: typeof GET_CATEGORIES\r\n    payload: ICategory[]\r\n}\r\n\r\nexport interface IUpdateCategory {\r\n    type: typeof UPDATE_CATEGORY\r\n    payload: ICategory\r\n}\r\n\r\nexport interface IDeleteCategory {\r\n    type: typeof DELETE_CATEGORY\r\n    payload: string\r\n}\r\n\r\n\r\nexport type ICategoryType =  \r\n| ICreateCategory \r\n| IGetCategories\r\n| IUpdateCategory\r\n| IDeleteCategory","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { IParams } from './utils/typeScript'\r\nimport NotFound from './components/global/notFound'\r\n\r\nconst generatePage = (name: string) => {\r\n    //render the page name\r\n    const component = ()=> require(`./pages/${name}`).default\r\n\r\n    try {\r\n        return React.createElement(component())\r\n    } catch (err) {\r\n        return <NotFound />;\r\n    }\r\n}\r\n\r\nconst PageRender = () => {\r\n    const { page, slug } : IParams = useParams()\r\n\r\n    let name = '';\r\n\r\n    if(page){\r\n        name = slug ? `${page}/[slug]` : `${page}`\r\n    }\r\n\r\n    return generatePage(name)\r\n}\r\n\r\nexport default PageRender\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router'\r\n\r\nimport { getAPI } from '../../utils/fetchData'\r\nimport { IBlog } from '../../utils/typeScript'\r\n\r\nimport CardHoriz from '../cards/cardHoriz'\r\n\r\nconst Search = () => {\r\n    const [search, setSearch] = useState('')\r\n    const [blogs, setBlogs] = useState<IBlog[]>([])\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    useEffect(() => {\r\n      const delayDebounce = setTimeout(async () => {\r\n        if(search.length < 2) return setBlogs([])\r\n\r\n        try {\r\n          const res = await getAPI(`search/blogs?title=${search}`)\r\n          setBlogs(res.data)\r\n        } catch (err: any) {\r\n          console.log(err)\r\n        }\r\n      }, 400)\r\n\r\n      return () => clearTimeout(delayDebounce)\r\n    },[search])\r\n\r\n    useEffect(() => {\r\n      setSearch('')\r\n      setBlogs([])\r\n    },[pathname])\r\n\r\n    return (\r\n        <div className='search w-100 position-relative me-4'>\r\n          <input type='text' className='form-control me-2 w-100 rounded' \r\n          value={search} placeholder='Nhập mục bạn muốn tìm kiếm...' \r\n          onChange={e => setSearch(e.target.value)} />\r\n\r\n          {\r\n            search.length >= 2 &&\r\n            <div className='position-absolute pt-2 px-1'\r\n            style={{ \r\n              background: '#eee', \r\n              zIndex: 10, \r\n              maxHeight: 'calc(100vh - 100px)', \r\n              overflow: 'auto' \r\n            }}>\r\n              {\r\n                blogs.length\r\n                ? blogs.map(blog =>(\r\n                  <CardHoriz key={blog._id} blog={blog} />\r\n                ))\r\n                : <h3 className='text-center'>Không có bài viết nào được tìm thấy</h3>\r\n              }\r\n            </div>\r\n          }  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RootStore } from '../../utils/typeScript'\r\nimport { logout } from '../../redux/actions/authAction'\r\n\r\nconst Menu = () => {\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const { pathname } = useLocation()\r\n\r\n    const bfLoginLinks = [\r\n        { label: 'Đăng nhập', path: '/login' },\r\n        { label: 'Đăng ký', path: '/register'}\r\n    ]\r\n\r\n    const afLoginLinks = [\r\n        { label: 'Trang chủ', path: '/login' },\r\n        { label: 'Tạo Blog', path: '/create_blog'}\r\n    ]\r\n\r\n    const navLinks = auth.access_token ? afLoginLinks : bfLoginLinks;\r\n\r\n    const isActive = (pn: string) => {\r\n        if(pn === pathname) return 'active';\r\n    }\r\n\r\n    const handleLogout = () => {\r\n        if(!auth.access_token) return\r\n        dispatch(logout(auth.access_token))\r\n    }\r\n\r\n    return (\r\n        <ul className=\"navbar-nav ms-auto\" >\r\n            {\r\n                navLinks.map((link, index) => (\r\n                    <li key={index} className={`nav-item ${isActive(link.path)}`}>\r\n                            <Link className='nav-link' to={link.path}>{link.label}</Link>\r\n                    </li>\r\n                ))\r\n            }\r\n\r\n            {\r\n                //Only admin can access this function\r\n                auth.user?.role === 'admin' &&\r\n                <li className={`nav-item ${isActive('/category')}`}>\r\n                    <Link to='/category' className='nav-link'>Tạo thể loại</Link>\r\n                </li>\r\n            }\r\n\r\n            {\r\n                auth.user &&\r\n                <li className=\"nav-item dropdown\">\r\n                  <span className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" \r\n                  data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                    <img src={auth.user.avatar} alt=\"avatar\" className=\"avatar\" />\r\n                  </span>\r\n\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <li>\r\n                            <Link className=\"dropdown-item\" to={`/profile/${auth.user._id}`}>\r\n                                Thông tin cá nhân\r\n                            </Link>\r\n                        </li>\r\n                            <li><hr className=\"dropdown-divider\" /></li>\r\n                        <li>\r\n                            <Link className=\"dropdown-item\" to=\"/\"\r\n                            onClick={handleLogout}>\r\n                                Đăng xuất\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n            </li>\r\n            }\r\n\r\n            \r\n\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Search from './Search'\r\nimport Menu from './Menu'\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light p-3\"\r\n        style={{position: 'sticky', top: 0, left: 0, zIndex: 9}}>\r\n\r\n                <Link className=\"navbar-brand\" to='/'>BlogProject</Link>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#navbarNav\" aria-controls=\"navbarSupportedContent\" \r\n                aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <Search />\r\n                    <Menu />\r\n\r\n                </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='text-center bg-light py-4'>\r\n            <h6>Chào mừng đến với LongHoangPham Blog</h6>\r\n            <p> Copyright &copy; 2021</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { RootStore, IComment } from './utils/typeScript'\r\n\r\nimport {\r\n    CREATE_COMMENT,\r\n    REPLY_COMMENT,\r\n    UPDATE_COMMENT,\r\n    UPDATE_REPLY,\r\n    DELETE_COMMENT,\r\n    DELETE_REPLY\r\n} from './redux/types/commentType'\r\n\r\nconst SocketClient = () => {\r\n    const { socket } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    // Create Realtime Comment\r\n    useEffect(() => {\r\n        if(!socket) return\r\n\r\n        socket.on('createComment', (data: IComment) => {\r\n            dispatch({ type: CREATE_COMMENT, payload: data })\r\n        })\r\n\r\n        return () => { socket.off('createComment') }\r\n    },[socket, dispatch])\r\n\r\n    // Reply Realtime Comment\r\n    useEffect(() => {\r\n        if(!socket) return\r\n        \r\n        socket.on('replyComment', (data: IComment) => {\r\n            dispatch({ type: REPLY_COMMENT, payload: data })\r\n        })\r\n\r\n        return () => { socket.off('replyComment') }\r\n    },[socket, dispatch])\r\n\r\n    // Update Realtime Comment\r\n    useEffect(() => {\r\n        if(!socket) return\r\n        \r\n        socket.on('updateComment', (data: IComment) => {\r\n            dispatch({\r\n                type: data.comment_root ? UPDATE_REPLY : UPDATE_COMMENT,\r\n                payload: data\r\n            })\r\n        })\r\n\r\n        return () => { socket.off('updateComment') }\r\n    },[socket, dispatch])\r\n\r\n    // Delete Realtime Comment\r\n    useEffect(() => {\r\n        if(!socket) return\r\n        \r\n        socket.on('deleteComment', (data: IComment) => {\r\n            dispatch({\r\n                type: data.comment_root ? DELETE_REPLY : DELETE_COMMENT,\r\n                payload: data\r\n            })\r\n        })\r\n\r\n        return () => { socket.off('deleteComment') }\r\n    },[socket, dispatch])\r\n\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SocketClient\r\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport PageRender from './pageRender'\nimport Header from './components/global/Header'\nimport Footer from './components/global/Footer'\n\nimport { Alert } from './components/alert/Alert'\n\nimport { refreshToken } from './redux/actions/authAction'\nimport { getCategories } from './redux/actions/categoryAction' \nimport { getHomeBlogs } from './redux/actions/blogAction'\n\nimport io from 'socket.io-client'\n\nimport SocketClient from './socketClient'\n\nimport { API_URL } from './utils/config'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(refreshToken())\n    dispatch(getCategories())\n    dispatch(getHomeBlogs())\n  },[dispatch])\n\n  useEffect(() => {\n    const socket = io(API_URL)\n    dispatch({ type: 'SOCKET', payload: socket })\n    return () => { socket.close() }\n  },[dispatch])\n\n  return (\n    <div className=\"container\">\n      <SocketClient />\n      <Router>\n        <Alert />\n        <Header />\n\n          <Switch>\n            <Route exact path =\"/\" component={PageRender} />\n            <Route exact path =\"/:page\" component={PageRender} />\n            <Route exact path =\"/:page/:slug\" component={PageRender} />\n          </Switch>\n\n        <Footer />\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import { AUTH, IAuth, IAuthType } from '../types/authType'\r\n\r\n\r\n\r\nconst authReducer = (state: IAuth = {}, action: IAuthType): IAuth => {\r\n    switch (action.type){\r\n        case AUTH:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { ALERT, IAlertType } from '../types/alertType'\r\nimport { IAlert} from '../../utils/typeScript'\r\n\r\n\r\n\r\nconst alertReducer = (state: IAlert = {}, action: any): IAlert => {\r\n    switch (action.type){\r\n        case ALERT:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default alertReducer;","import * as types from '../types/categoryType'\r\nimport { ICategory } from '../../utils/typeScript'\r\n\r\nconst categoryReducer = (\r\n  state: ICategory[] = [], action: types.ICategoryType\r\n): ICategory[] => {\r\n  switch (action.type) {\r\n    case types.CREATE_CATEGORY:\r\n      return [action.payload, ...state]\r\n\r\n    case types.GET_CATEGORIES:\r\n      return action.payload\r\n\r\n    case types.UPDATE_CATEGORY:\r\n      return state.map(item => (\r\n        item._id === action.payload._id \r\n        ? { ...item, name: action.payload.name}\r\n        : item\r\n      ))\r\n\r\n    case types.DELETE_CATEGORY:\r\n      return state.filter(item => item._id !== action.payload)\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default categoryReducer;","import { GET_HOME_BLOGS, IGetHomeBlogsType, IHomeBlogs } from '../types/blogType';\r\n\r\nconst homeBlogsReducer = (\r\n    state: IHomeBlogs[] = [],\r\n    action: IGetHomeBlogsType\r\n): IHomeBlogs[] => {\r\n    switch (action.type){\r\n        case GET_HOME_BLOGS:\r\n            return action.payload\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default homeBlogsReducer","import { GET_BLOGS_CATEGORY_ID, IBlogsCategory, IGetBlogsCategoryType } from '../types/blogType'\r\n\r\nconst blogsCategoryReducer = (\r\n    state: IBlogsCategory[] = [], \r\n    action: IGetBlogsCategoryType\r\n): IBlogsCategory[] => {\r\n    switch(action.type){\r\n        case GET_BLOGS_CATEGORY_ID:\r\n            if(state.every(item => item.id !== action.payload.id)){\r\n                return [...state, action.payload]\r\n                \r\n            }else{\r\n                return state.map(blog => (\r\n                    blog.id === action.payload.id ? action.payload : blog\r\n                ))\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default blogsCategoryReducer","import { IUser } from '../../utils/typeScript'\r\nimport { GET_OTHER_INFO, IGetOtherInfoType } from '../types/profileType'\r\n\r\nconst otherInfoReducer = (\r\n    state: IUser[] = [],\r\n    action: IGetOtherInfoType\r\n): IUser[] => {\r\n    switch (action.type) {\r\n        case GET_OTHER_INFO:\r\n            return [...state, action.payload]\r\n    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default otherInfoReducer","import { IUser } from '../../utils/typeScript'\r\n\r\nimport { \r\n    IBlogsUser,\r\n    GET_BLOGS_USER_ID, \r\n    CREATE_BLOGS_USER_ID,\r\n    DELETE_BLOGS_USER_ID,\r\n    IBlogUserType \r\n} from '../types/blogType'\r\n\r\nconst blogsUserReducer = (\r\n    state: IBlogsUser[] = [], \r\n    action: IBlogUserType\r\n): IBlogsUser[] => {\r\n    switch(action.type){\r\n        case GET_BLOGS_USER_ID:\r\n            if(state.every(item => item.id !== action.payload.id)){\r\n                return [...state, action.payload]\r\n                \r\n            }else{\r\n                return state.map(item => (\r\n                    item.id === action.payload.id ? action.payload : item\r\n                ))\r\n            }\r\n\r\n        case CREATE_BLOGS_USER_ID:\r\n            return state.map(item => (\r\n                item.id === (action.payload.user as IUser)._id\r\n                ? {\r\n                    ...item,\r\n                    blogs: [action.payload, ...item.blogs]\r\n                }\r\n                : item\r\n            ))\r\n\r\n        case DELETE_BLOGS_USER_ID:\r\n            return state.map(item => (\r\n                item.id === (action.payload.user as IUser)._id\r\n                ? {\r\n                    ...item,\r\n                    blogs: item.blogs.filter(blog => (\r\n                        blog._id !== action.payload._id\r\n                    ))\r\n                }\r\n                : item\r\n            ))\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default blogsUserReducer","import { \r\n    ICommentState, \r\n    CREATE_COMMENT, \r\n    GET_COMMENTS, \r\n    ICommentType, \r\n    REPLY_COMMENT, \r\n    IReplyCommentType ,\r\n    UPDATE_COMMENT,\r\n    UPDATE_REPLY,\r\n    IUpdateCommentType,\r\n    DELETE_COMMENT,\r\n    DELETE_REPLY,\r\n    IDeleteCommentType\r\n} from '../types/commentType'\r\n\r\nconst initialState = {\r\n    data: [],\r\n    total: 1\r\n}\r\n\r\nconst commentReducer = (\r\n    state: ICommentState = initialState,\r\n    action: ICommentType\r\n): ICommentState => {\r\n    switch(action.type){\r\n        case CREATE_COMMENT:\r\n            return{\r\n                ...state,\r\n                data: [action.payload, ...state.data]\r\n            }\r\n\r\n        case GET_COMMENTS:\r\n            return action.payload\r\n\r\n        case REPLY_COMMENT:\r\n            return { \r\n                ...state, \r\n                data: state.data.map(item => (\r\n                    item._id === action.payload.comment_root\r\n                    ? {\r\n                        ...item,\r\n                        replyCM: [\r\n                            action.payload,\r\n                            ...item.replyCM                            \r\n                        ]\r\n                    }\r\n                    : item\r\n                    ))\r\n                }\r\n\r\n        case UPDATE_COMMENT:\r\n            return{\r\n                ...state, \r\n                data: state.data.map(item =>(\r\n                    item._id === action.payload._id\r\n                    ? action.payload\r\n                    : item\r\n                ))\r\n            }\r\n\r\n        case UPDATE_REPLY:\r\n            return{\r\n                ...state, \r\n                data: state.data.map(item =>(\r\n                    item._id === action.payload.comment_root\r\n                    ? {\r\n                        ...item, \r\n                        replyCM: item.replyCM?.map(rp => (\r\n                            rp._id === action.payload._id\r\n                            ? action.payload\r\n                            : rp\r\n                        ))\r\n                    }\r\n                    : item\r\n                ))\r\n            }\r\n\r\n        case DELETE_COMMENT:\r\n            return{\r\n                ...state, \r\n                data: state.data.filter(item => item._id !== action.payload._id)\r\n            }\r\n\r\n        case DELETE_REPLY:\r\n            return{\r\n                ...state, \r\n                data: state.data.map(item => (\r\n                    item._id !== action.payload.comment_root\r\n                    ?{\r\n                        ...item,\r\n                        replyCM: item.replyCM?.filter(rp => (\r\n                            rp._id !== action.payload._id\r\n                        ))\r\n                    }\r\n                    : item\r\n                ))\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default commentReducer","import { Socket } from 'socket.io-client'\r\n\r\nexport const SOCKET = 'SOCKET'\r\n\r\nexport interface ISocketType{\r\n    type: typeof SOCKET,\r\n    payload: Socket\r\n}","import { SOCKET, ISocketType } from '../types/socketType'\r\n\r\nconst socketReducer = (state: any = null, action: ISocketType): any => {\r\n    switch(action.type) {\r\n        case SOCKET:\r\n            return action.payload\r\n        default: \r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default socketReducer\r\n","import { combineReducers} from 'redux'\r\nimport auth from './authReducer'\r\nimport alert from './alertReducer'\r\nimport categories from './categoryReducer'\r\nimport homeBlogs from './homeBlogsReducer'\r\nimport blogsCategory from './blogsCategoryReducer'\r\nimport otherInfo from './otherInfoReducer'\r\nimport blogsUser from './blogsUserReducer'\r\nimport comments from './commentReducer'\r\nimport socket from './socketReducer'\r\n\r\nexport default combineReducers({\r\n    auth, \r\n    alert,\r\n    categories,\r\n    homeBlogs,\r\n    blogsCategory,\r\n    otherInfo,\r\n    blogsUser,\r\n    comments,\r\n    socket\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers/index'\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n \r\n)\r\n\r\n\r\n \r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/main.scss';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","export const checkImage = (file: File) => {\r\n    const types = ['image/png', 'image/jpeg', 'image/gif']\r\n    let err = ''\r\n    if(!file) return err = \"Tập tin không tồn tại.\"\r\n\r\n    if(file.size > 1024 * 1024) //1mb\r\n        err = 'Kích thước tập tin tối đa là 1mb.'\r\n\r\n    if(!types.includes(file.type))\r\n        err = 'Định dạng hình ảnh phải là png, jpeg hoặc gif.'\r\n\r\n    return err;\r\n}\r\n\r\nexport const imageUpload = async (file: File) => {\r\n    const formData = new FormData()\r\n    formData.append('file', file)\r\n    formData.append('upload_preset', 'x8ieqefl') //upload image using cloudinary\r\n    formData.append('cloud_name', 'dtwo1zjqb')\r\n\r\n    const res = await fetch('https://api.cloudinary.com/v1_1/dtwo1zjqb/upload', {\r\n        method: 'POST',\r\n        body: formData\r\n    })\r\n\r\n    const data = await res.json()\r\n    return {public_id: data.public_id, url: data.secure_url};\r\n}","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"position-relative\" \r\n             style= {{minHeight: 'calc(100vh - 70px)' }}>\r\n\r\n            <h2 className='position-absolute text-secondary'\r\n            style={{top: '50%', left: '50%', transform: 'translate(-50%, -50%)'}}>\r\n                404 ! NotFound \r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import { IUserRegister, IBlog } from './typeScript'\r\n\r\nexport const validRegister = ( userRegister: IUserRegister) => {\r\n    const { name, account, password, cf_password } = userRegister;\r\n    const errors: string[] = [];\r\n\r\n    if(!name) {\r\n        errors.push('Vui lòng nhập họ và tên.')\r\n    }else if(name.length > 20) {\r\n        errors.push('Họ và tên chỉ dài tối đa 20 ký tự!') \r\n    }\r\n\r\n    if(!account) {\r\n        errors.push('Nhập địa chỉ email hoặc số điện thoại.')\r\n    }else if(!validPhone(account) && !validateEmail(account)) {\r\n        errors.push('Địa chỉ email hoặc số điện thoại không đúng, xin vui lòng nhập lại!') \r\n    }\r\n\r\n    const msg = checkPassword(password, cf_password)\r\n    if(msg) errors.push(msg)\r\n    \r\n    return {\r\n        errMsg: errors,\r\n        errLength: errors.length\r\n    }  \r\n}\r\n\r\nexport const checkPassword = (password: string, cf_password: string) => {\r\n    if(password.length < 6){\r\n        return (\"Mật khẩu phải dài ít nhất 6 ký tự!\")\r\n    }else if(password !== cf_password){\r\n        return ('Mật khẩu không trùng khớp, xin hãy nhập lại!')\r\n    }\r\n}\r\n\r\nexport function validPhone(phone: string) {\r\n    const re = /^[+]/g\r\n    return re.test(phone)\r\n}\r\n  \r\nexport function validateEmail(email: string) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n//Valid Blog\r\nexport const validCreateBlog = ({\r\n    title, content, description, thumbnail, category\r\n}: IBlog) => {\r\n    const err: string[] = []\r\n\r\n    if(title.trim().length < 10){\r\n        err.push('Tiêu đề phải dài ít nhất 10 ký tự.')\r\n    }else if(title.trim().length > 50){\r\n        err.push('Tiêu đề chỉ dài tối đa 50 ký tự.')\r\n    }\r\n\r\n    if(content.trim().length < 50){\r\n        err.push('Nội dung phải dài ít nhất 50 ký tự.')\r\n    }else if(content.trim().length > 2000){\r\n        err.push('Nội dung chỉ dài tối đa 2000 ký tự.')\r\n    }\r\n\r\n    if(description.trim().length < 10){\r\n        err.push('Mô tả phải dài ít nhất 10 ký tự.')\r\n    }else if(description.trim().length > 2000){\r\n        err.push('Mô tả chỉ dài tối đa 2000 ký tự.')\r\n    }\r\n\r\n    if(!thumbnail){\r\n        err.push('Ảnh không được để trống.')\r\n    }\r\n\r\n    if(!category){\r\n        err.push('Thể loại không được để trống.')\r\n    }\r\n\r\n    return {\r\n        errMsg: err,\r\n        errLength: err.length\r\n    }\r\n    \r\n}\r\n\r\n// Shallow equality\r\nexport const shallowEqual = (object1: any, object2: any) => {\r\n    const keys1 = Object.keys(object1)\r\n    const keys2 = Object.keys(object2)\r\n\r\n    if(keys1.length !== keys2.length) {\r\n        return false\r\n    }\r\n\r\n    for(let key of keys1) {\r\n        if(object1[key] !== object2[key]){\r\n            return false\r\n        }\r\n    }\r\n\r\n    return true\r\n}","// export const API_URL = 'http://localhost:5000'\r\nexport const API_URL = 'https://blog-project-api-final.herokuapp.com/'","import { IUser } from '../../utils/typeScript'\r\n\r\nexport const AUTH = 'AUTH'\r\n\r\nexport interface IAuth {\r\n    msg?: string\r\n    access_token?: string\r\n    user?: IUser\r\n}\r\n\r\nexport interface IAuthType {\r\n    type: typeof AUTH\r\n    payload: IAuth\r\n}\r\n\r\nexport type GlobalType = IAuthType","import { Dispatch } from \"redux\"\r\nimport { IAuth, IAuthType } from '../types/authType'\r\nimport { IAlertType, ALERT } from \"../types/alertType\"\r\n\r\nimport { checkImage, imageUpload } from \"../../utils/imageUpload\"\r\nimport { patchAPI, getAPI } from \"../../utils/fetchData\"\r\nimport { checkPassword } from \"../../utils/Valid\"\r\nimport { CheckTokenExpired } from \"../../utils/checkTokenExpired\"\r\n\r\nimport { GET_OTHER_INFO, IGetOtherInfoType } from '../types/profileType';\r\n\r\nexport const updateUser = (avatar: File, name: string, auth: IAuth) => \r\nasync (dispatch: Dispatch<IAlertType | IAuthType>) => {\r\n    if(!auth.access_token || !auth.user) return\r\n\r\n    const result = await CheckTokenExpired(auth.access_token, dispatch)\r\n    const access_token = result ? result : auth.access_token\r\n\r\n    let url = ''\r\n    try{\r\n        dispatch({ type: ALERT, payload: {loading: true}})\r\n        if(avatar){\r\n            const check = checkImage(avatar)\r\n            if(check)\r\n                return dispatch({ type: ALERT, payload: {errors: check}})\r\n\r\n            const photo = await imageUpload(avatar)\r\n            url = photo.url\r\n        }\r\n\r\n        dispatch({ \r\n            type:'AUTH', \r\n            payload: {\r\n                access_token: auth.access_token,\r\n                user: {\r\n                    ...auth.user, \r\n                    avatar: url ? url : auth.user.avatar, \r\n                    name: name ? name : auth.user.name\r\n                }\r\n                \r\n            } \r\n        })\r\n\r\n        const res = await patchAPI('user', { \r\n            avatar: url ? url : auth.user.avatar, name: name ? name : auth.user.name\r\n        }, access_token)\r\n\r\n        dispatch({ type: ALERT, payload: {success: res.data.msg}})\r\n    } catch(err: any) {\r\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const resetPassword = (password: string, cf_password: string, token: string) => \r\nasync (dispatch: Dispatch<IAlertType | IAuthType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    const access_token = result ? result : token\r\n\r\n    const msg = checkPassword(password, cf_password)\r\n    if(msg) return dispatch({ type: ALERT, payload: {errors: msg}})\r\n\r\n    try{\r\n        dispatch({ type: ALERT, payload: {loading: true}})\r\n\r\n        const res = await patchAPI('reset_password', { password }, access_token)\r\n\r\n        dispatch({ type: ALERT, payload: {success: res.data.msg}})\r\n\r\n    } catch(err: any) {\r\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const getOtherInfo = (id: string) => \r\nasync (dispatch: Dispatch<IAlertType | IGetOtherInfoType>) => {\r\n    try{\r\n        dispatch({ type: ALERT, payload: {loading: true}})\r\n\r\n        const res = await getAPI(`user/${id}`)\r\n\r\n        dispatch({\r\n            type: GET_OTHER_INFO,\r\n            payload: res.data\r\n        })\r\n\r\n        dispatch({ type: ALERT, payload: { }})\r\n\r\n    } catch(err: any) {\r\n        dispatch({ type: ALERT, payload: {errors: err.response.data.msg}})\r\n    }\r\n}","import React from 'react'\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className='position-fixed w-100 h-100 text-center loading'\r\n        style={{background: '#0007', color: 'white', top: 0, left: 0, zIndex: 99}}>\r\n            <svg width='205' height='250' viewBox='0 0 40 50' >\r\n                <polygon stroke='#fff' strokeWidth='1' fill='none' points='20,1 40,40 1,40' />\r\n                <text fill='#fff' x='5' y='47'>Đang tải</text>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import { useDispatch } from 'react-redux'\r\nimport { ALERT } from '../../redux/types/alertType'\r\n\r\ninterface IProps {\r\n    title: string \r\n    body:string | string[] \r\n    bgColor: string\r\n}\r\n\r\nconst Toast = ({ title, body, bgColor }: IProps) => {\r\n\r\nconst dispatch = useDispatch()\r\n\r\nconst handleClose = () => {\r\n     dispatch({type: ALERT, payload: {} })\r\n}\r\n\r\n    return (\r\n        <div className={`toast show position-fixed text-light ${bgColor}`}\r\n        style={{ top: '5px', right: '5px', zIndex: 50, minWidth: '200px' }}>\r\n\r\n            <div className={`toast-header text-light ${bgColor}`}>\r\n\r\n                <strong className=\"me-auto\">{ title }</strong>\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"toast\" \r\n                aria-label=\"Close\" onClick={ handleClose } />\r\n\r\n            </div>\r\n\r\n            <div className=\"toast-body\">\r\n                { \r\n                    typeof(body) === 'string'\r\n                    ? body\r\n                    : <ul>\r\n                        {\r\n                            body.map((text, index) => (\r\n                                <li key={ index }>{ text }</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toast\r\n","import { useSelector } from 'react-redux'\r\nimport { RootStore } from '../../utils/typeScript';\r\n\r\nimport Loading from './Loading'\r\nimport Toast from './Toast'\r\n\r\nexport const Alert = () => {\r\n    const { alert } = useSelector((state: RootStore) => state)\r\n\r\n    return (\r\n        <div>\r\n            { alert.loading && <Loading />}\r\n\r\n            { alert.errors && <Toast title='OOPS!' body={ alert.errors } bgColor='bg-danger' />}\r\n\r\n            { alert.success && <Toast title='Thành công' body={ alert.success } bgColor='bg-success' />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const showErrMsg = (msg: string) => {\r\n    return <div className='errMsg'>{ msg }</div>\r\n}\r\n\r\nexport const showSuccessErrMsg = (msg: string) => {\r\n    return <div className='successMsg'>{ msg }</div>\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\ninterface IProps {\r\n    total: number\r\n    callback: (num: number) => void\r\n}\r\n\r\nconst Pagination: React.FC<IProps> = ({total, callback}) => {\r\n    const [page, setPage] = useState(1)\r\n\r\n    const newArr = [...Array(total)].map((_,i) => i + 1)\r\n    const history = useHistory()\r\n\r\n    const isActive = (index: number) => {\r\n        if(index === page) return 'active'\r\n        return ''\r\n    }\r\n\r\n    const handlePagination = (num: number) => {\r\n        history.push(`?page=${num}`)\r\n        callback(num)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const num = history.location.search.slice(6) || 1\r\n        setPage(Number(num))\r\n    },[history.location.search])\r\n\r\n    return (\r\n        <nav aria-label=\"Page navigation example\" style={{cursor: 'pointer'}}>\r\n            <ul className=\"pagination\">\r\n                {\r\n                    page > 1 &&\r\n                    <li className=\"page-item\" onClick={() => handlePagination(page - 1)}>\r\n                        <span className=\"page-link\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </span>\r\n                    </li>\r\n                }\r\n                \r\n\r\n                {\r\n                    //number list\r\n                    newArr.map(num =>(\r\n                        <li key={num} className={`page-item ${isActive(num)}`}\r\n                        onClick={() => handlePagination(num)}>\r\n                            <span className=\"page-link\">{num}</span>\r\n                        </li>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    page < total &&\r\n                    <li className=\"page-item\" onClick={() => handlePagination(page + 1)}>\r\n                        <span className=\"page-link\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </span>\r\n                 </li>\r\n                }\r\n                \r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { IBlog, IParams, RootStore } from '../../utils/typeScript'\r\n\r\nimport { deleteBlog } from '../../redux/actions/blogAction'\r\n\r\ninterface IProps {\r\n    blog: IBlog\r\n}\r\n\r\nconst CardHoriz: React.FC<IProps> = ({blog}) => {\r\n    const { slug } = useParams<IParams>()\r\n    const { auth } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        if(!auth.user || !auth.access_token) return\r\n\r\n        if(slug !== auth.user._id) return dispatch({\r\n            type: 'ALERT',\r\n            payload: { error: 'Xác thực không hợp lệ.' }\r\n        })\r\n        \r\n        if(window.confirm('Bạn có muốn xóa bài viết này? Thao tác này sẽ không thể hoàn lại')){\r\n            dispatch(deleteBlog(blog, auth.access_token))\r\n        }\r\n    }\r\n\r\n    // console.log({slug})\r\n\r\n    return (\r\n        <div className=\"card mb-3\" style={{minWidth: \"260px\"}}>\r\n            <div className=\"row g-0 p-2\">\r\n                <div className=\"col-md-4\" style={{\r\n                    minHeight: '150px', maxHeight: '170px', overflow: 'hidden'\r\n                }}>\r\n                    {\r\n                        blog.thumbnail &&\r\n                        <>\r\n                            {\r\n                                typeof(blog.thumbnail) === 'string'\r\n                                ? <Link to={`/blog/${blog._id}`}>\r\n                                    <img src={blog.thumbnail} \r\n                                    className=\"w-100 h-100\" alt=\"thumbnail\"\r\n                                    style={{objectFit: 'cover'}} />\r\n                                    </Link>\r\n                                :<img src={URL.createObjectURL(blog.thumbnail)} \r\n                                 className=\"w-100 h-100\" alt=\"thumbnail\"\r\n                                 style={{objectFit: 'cover'}} />\r\n                            }\r\n                        </>\r\n                    }\r\n                \r\n                </div>\r\n                \r\n                <div className=\"col-md-8\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/blog/${blog._id}`} \r\n                        className='text-capitalize text-decoration-none'>\r\n                            {blog.title}\r\n                        </Link>      \r\n                    </h5>\r\n\r\n                    <p className=\"card-text\">{blog.description}</p>\r\n                    {\r\n                        blog.title &&\r\n                        <div className=\"card-text d-flex justify-content-between\r\n                         align-items-center\">\r\n                            {\r\n                                (auth.user && slug === auth.user._id) &&\r\n                                <div style={{cursor: 'pointer'}}>\r\n                                    <Link to={`/update_blog/${blog._id}`}>\r\n                                        <i className='fas fa-edit' title='edit' />\r\n                                    </Link>\r\n\r\n                                    <i className='fas fa-trash text-danger mx-3' title='edit'\r\n                                    onClick={handleDelete} />\r\n                                </div>\r\n                            }\r\n\r\n                            <small className=\"text-muted\">\r\n                                {new Date(blog.createdAt).toLocaleString()}\r\n                            </small>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardHoriz\r\n","import { Dispatch } from \"redux\"\r\nimport { ALERT, IAlertType } from '../types/alertType'\r\n\r\nimport { postAPI, getAPI, patchAPI, deleteAPI } from \"../../utils/fetchData\"\r\nimport { ICategory } from \"../../utils/typeScript\"\r\n\r\nimport { \r\n    CREATE_CATEGORY, \r\n    ICategoryType, \r\n    GET_CATEGORIES, \r\n    UPDATE_CATEGORY,\r\n    DELETE_CATEGORY \r\n} from \"../types/categoryType\"\r\n\r\nimport { CheckTokenExpired } from '../../utils/checkTokenExpired';\r\n\r\nexport const createCategory = (name: string, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | ICategoryType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    // console.log({result})\r\n\r\n    const access_token = result ? result : token\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await postAPI('category', { name }, access_token)\r\n\r\n        dispatch({ type: CREATE_CATEGORY, payload: res.data.newCategory })\r\n\r\n        dispatch({ type: ALERT, payload: { loading: false }})\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const getCategories = () => \r\nasync(dispatch: Dispatch<IAlertType | ICategoryType>) => {\r\n    try {\r\n        dispatch({ type: ALERT, payload: { loading: true }})\r\n\r\n        const res = await getAPI('category')\r\n        console.log(res)\r\n\r\n        dispatch({ type: GET_CATEGORIES, payload: res.data.categories })\r\n\r\n        dispatch({ type: ALERT, payload: { loading: false }})\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const updateCategory = (data: ICategory, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | ICategoryType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    // console.log({result})\r\n\r\n    const access_token = result ? result : token\r\n    try {\r\n        dispatch({ type: UPDATE_CATEGORY, payload: data })\r\n\r\n        await patchAPI(`category/${data._id}`, { name: data.name }, access_token)\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (id: string, token: string) => \r\nasync(dispatch: Dispatch<IAlertType | ICategoryType>) => {\r\n    const result = await CheckTokenExpired(token, dispatch)\r\n    // console.log({result})\r\n\r\n    const access_token = result ? result : token\r\n    try {\r\n        dispatch({ type: DELETE_CATEGORY, payload: id })\r\n\r\n        await deleteAPI(`category/${id}`, access_token)\r\n    } catch (err: any) {\r\n        dispatch({ type: ALERT, payload: { errors: err.response.data.msg }})\r\n    }\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { RootStore, IBlog, InputChange } from '../../utils/typeScript'\r\n\r\ninterface IProps {\r\n    blog: IBlog\r\n    setBlog: (blog: IBlog) => void\r\n}\r\n\r\nconst CreateForm: React.FC<IProps> = ({blog, setBlog}) => {\r\n    const { categories } = useSelector((state: RootStore) => state)\r\n\r\n    const handleChangeInput = (e: InputChange) => {\r\n        const { value, name } = e.target\r\n        setBlog({...blog, [name]: value})\r\n    }\r\n    const handleChangeThumbnail = (e: InputChange) => {\r\n        const target = e.target as HTMLInputElement \r\n        const files = target.files\r\n        if(files){\r\n            const file = files[0]\r\n            setBlog({...blog, thumbnail: file})\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"form-group position-relative\">\r\n                <input type=\"text\" className='form-control' value={blog.title} name='title'\r\n                onChange={handleChangeInput} />\r\n                \r\n                <small className='text-muted position-absolute' \r\n                style={{bottom: 0, right: '3px', opacity: '0.4'}}>\r\n                    {blog.title.length}/50\r\n                </small>\r\n            </div>\r\n\r\n            <div className=\"form-group my-3\">\r\n                <input type=\"file\" className='form-control' accept='image/*' \r\n                onChange={handleChangeThumbnail} />\r\n                \r\n            </div>\r\n        \r\n            <div className=\"form-group position-relative\">\r\n                <textarea className='form-control' rows={4}\r\n                value={blog.description} style={{resize: 'none'}} name='description'\r\n                onChange={handleChangeInput} />\r\n\r\n                <small className='text-muted position-absolute' \r\n                style={{bottom: 0, right: '3px', opacity:'0.3'}}>\r\n                    {blog.description.length}/2000\r\n                </small>\r\n            </div>\r\n        \r\n            <div className=\"form-group my-3\">\r\n                <select className='form-control text-capitalize' value={blog.category}\r\n                name='category' onChange={handleChangeInput}>\r\n                    <option value=''>Chọn thể loại mà bạn muốn</option>\r\n                    {\r\n                        categories.map(category => (\r\n                            <option key={category._id} value={category._id}>{category.name}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateForm\r\n","import React, { useEffect, useRef,useCallback } from 'react'\r\nimport ReactQuill from 'react-quill'\r\nimport 'react-quill/dist/quill.snow.css'\r\n\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { checkImage, imageUpload } from '../../utils/imageUpload'\r\nimport { ALERT } from '../../redux/types/alertType'\r\n\r\n\r\ninterface IProps {\r\n    setBody: (value: string) => void\r\n    body: string\r\n}\r\n\r\nconst QuillReact: React.FC<IProps> = ({setBody, body}) => {\r\n    const dispatch = useDispatch()\r\n    const quillRef = useRef<ReactQuill>(null)\r\n\r\n    const modules = { toolbar: { container }}\r\n\r\n    //Custom change\r\n\r\n    const handleChangeImage = useCallback(() => {\r\n        const input = document.createElement('input')\r\n        input.type = 'file'\r\n        input.accept = 'image/*'\r\n        input.click()\r\n        \r\n        input.onchange = async () => {\r\n            const files = input.files\r\n            if(!files) return dispatch({type: ALERT, payload: { errors: 'Tệp tin không tồn tại.'}})\r\n\r\n            const file = files[0]\r\n            const check = checkImage(file)\r\n            if(check) return dispatch({ type: ALERT, payload: { errors: check} })\r\n\r\n            dispatch({ type: ALERT, payload: { loading: true } })\r\n            const photo = await imageUpload(file)\r\n            \r\n            const quill = quillRef.current\r\n            const range = quill?.getEditor().getSelection()?.index\r\n            if(range !== undefined){\r\n                quill?.getEditor().insertEmbed(range, 'image', `${photo.url}`)\r\n            }\r\n\r\n            dispatch({ type: ALERT, payload: { loading: false } })\r\n\r\n        }\r\n    },[dispatch])\r\n\r\n    useEffect(() =>{\r\n        const quill = quillRef.current;\r\n        if(!quill) return;\r\n\r\n        let toolbar =  quill.getEditor().getModule('toolbar')\r\n        toolbar.addHandler('image', handleChangeImage)\r\n    },[handleChangeImage])\r\n    \r\n    return (\r\n        <div>\r\n            <ReactQuill theme='snow' modules={modules} placeholder='Viết nội dung...'\r\n            onChange={e => setBody(e)} value={body} ref={quillRef}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet container = [\r\n    [{ 'font': [] }],\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n    [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n\r\n    ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n    ['blockquote', 'code-block'],\r\n    [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n    [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript\r\n\r\n    [{ 'list': 'ordered'}, { 'list': 'bullet' }],\r\n    [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent\r\n    [{ 'direction': 'rtl' }],                         // text direction\r\n    [{ 'align': [] }],\r\n\r\n    ['clean', 'link', 'image','video']\r\n]\r\n\r\nexport default QuillReact\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { RootStore, IBlog, IUser } from '../utils/typeScript'\r\nimport { validCreateBlog, shallowEqual } from '../utils/Valid'\r\nimport { getAPI } from '../utils/fetchData'\r\n\r\nimport NotFound from '../components/global/notFound'\r\n\r\nimport CreateForm from '../components/cards/createForm'\r\nimport CardHoriz from '../components/cards/cardHoriz'\r\n\r\nimport ReactQuill from '../components/editor/reactQuill'\r\n\r\nimport { ALERT } from '../redux/types/alertType'\r\n\r\nimport { createBlog, updateBlog } from '../redux/actions/blogAction'\r\n\r\ninterface IProps {\r\n    id?: string\r\n}\r\n\r\nconst CreateBlog: React.FC<IProps> = ({id}) => {\r\n    const initState = {\r\n        user: '',\r\n        title: '',\r\n        content: '',\r\n        description: '',\r\n        thumbnail: '',\r\n        category: '',\r\n        createdAt: new Date().toISOString()\r\n    }\r\n\r\n    const [blog, setBlog] = useState<IBlog>(initState)\r\n    const [body, setBody] = useState('')\r\n\r\n    const divRef = useRef<HTMLDivElement>(null)\r\n    const [text, setText] = useState('')\r\n    \r\n    const { auth } = useSelector((state: RootStore) => state)\r\n    const dispatch = useDispatch()\r\n\r\n    const [oldData, setOldData] = useState<IBlog>(initState)\r\n\r\n    useEffect(() => { \r\n        if(!id) return\r\n\r\n        getAPI(`blog/${id}`)\r\n        .then(res => {\r\n            // console.log(res)\r\n            setBlog(res.data)\r\n            setBody(res.data.content)\r\n            setOldData(res.data)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        const initData = {\r\n            user: '',\r\n            title: '',\r\n            content: '',\r\n            description: '',\r\n            thumbnail: '',\r\n            category: '',\r\n            createdAt: new Date().toISOString()\r\n        }\r\n\r\n        return () => {\r\n            setBlog(initData)\r\n            setBody('')\r\n            setOldData(initData)\r\n        }\r\n    },[id])\r\n\r\n    useEffect(() => {\r\n        const div = divRef.current; \r\n        if(!div) return;\r\n\r\n        const text = (div?.innerText as string)\r\n        setText(text)\r\n    },[body])\r\n\r\n    const handleSubmit = async() => {\r\n        if(!auth.access_token) return\r\n\r\n        const check = validCreateBlog({...blog, content: text})\r\n        if(check.errLength !== 0){\r\n            return dispatch({ type: ALERT, payload: { errors: check.errMsg } })\r\n        }\r\n\r\n        let newData = {...blog, content: body}\r\n\r\n        if(id){\r\n            if((blog.user as IUser)._id !== auth.user?._id)\r\n                return dispatch({\r\n                    type: 'ALERT',\r\n                    payload: { errors: 'Xác thực không hợp lệ.' }\r\n                })\r\n\r\n            const result = shallowEqual(oldData, newData)\r\n            // if data not changed, it will received toast alert\r\n            if(result) return dispatch({\r\n                type: 'ALERT',\r\n                payload: { errors: 'Dữ liệu chưa được thay đổi.' }\r\n            })\r\n            // console.log(result)\r\n\r\n            dispatch(updateBlog(newData, auth.access_token))\r\n        }else{\r\n            dispatch(createBlog(newData, auth.access_token))\r\n        }\r\n    }\r\n\r\n    if(!auth.access_token) return <NotFound />\r\n    return (\r\n        <div className='my-4 create_blog'>\r\n            <h2>Tạo blog</h2>\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-6\">\r\n                    <h5>Tạo</h5>\r\n                    <CreateForm blog={blog} setBlog={setBlog} />\r\n                </div>\r\n\r\n                <div className=\"col-md-6\">\r\n                    <h5>Xem trước</h5>\r\n                    <CardHoriz blog={blog} />\r\n                </div>\r\n            </div>\r\n\r\n            <ReactQuill setBody={setBody} body={body} />\r\n\r\n            <div ref={divRef} dangerouslySetInnerHTML={{\r\n                __html: body\r\n            }} style={{display: 'none'}} />\r\n            \r\n            <small>{text.length}</small>\r\n\r\n            <button className='btn btn-dark mt-3 d-block mx-auto' onClick={handleSubmit}>\r\n                {/* blog must have id when created to update */}\r\n                { id ? 'Cập nhập bài viết' : 'Tạo bài viết' } \r\n            </button>\r\n\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\nexport default CreateBlog\r\n","import React from 'react'\r\nimport { Link} from 'react-router-dom'\r\n\r\nimport { IBlog } from '../../utils/typeScript'\r\n\r\ninterface IProps {\r\n  blog: IBlog\r\n}\r\n\r\nconst CardVert: React.FC<IProps> = ({blog}) => {\r\n  return (\r\n    <div className=\"card\">\r\n      {\r\n        typeof(blog.thumbnail) === 'string' &&\r\n        <img src={blog.thumbnail} className=\"card-img-top\" alt=\"...\"\r\n        style={{height: '180px', objectFit: 'cover'}} />\r\n      }\r\n\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">\r\n          <Link to={`/blog/${blog._id}`} style={{\r\n            textDecoration: 'none', textTransform: 'capitalize'\r\n          }}>\r\n            {blog.title.slice(0,50) + '...'}\r\n          </Link>\r\n        </h5>\r\n        <p className=\"card-text\">\r\n          { blog.description.slice(0,100) + '...' }\r\n        </p>\r\n\r\n        <p className=\"card-text d-flex justify-content-between\">\r\n          <small className=\"text-muted text-capitalize\">\r\n            {\r\n              typeof(blog.user) !== 'string' &&\r\n              <Link to={`/profile/${blog.user._id}`} style={{\r\n                textDecoration: 'none', textTransform: 'capitalize'\r\n              }}>\r\n                Viết bởi: {blog.user.name}\r\n              </Link>\r\n            }\r\n          </small>\r\n\r\n          <small className=\"text-muted\">\r\n            { new Date(blog.createdAt).toLocaleString() }\r\n          </small>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardVert","import { IUser } from '../../utils/typeScript'\r\n\r\nexport const GET_OTHER_INFO = 'GET_OTHER_INFO'\r\n\r\nexport interface IGetOtherInfoType {\r\n    type: typeof GET_OTHER_INFO,\r\n    payload: IUser\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { RootStore } from '../utils/typeScript'\r\n\r\nimport CardVert from '../components/cards/cardVert'\r\n\r\nimport Loading from '../components/global/Loading'\r\n\r\n\r\nconst Home = () => {\r\n    const { homeBlogs } = useSelector((state: RootStore) => state)\r\n\r\n    if(homeBlogs.length === 0) return <Loading />\r\n    return (\r\n        <div className='home_page'>\r\n            {\r\n                homeBlogs.map(homeBlog => (\r\n                    <div key={homeBlog._id}>\r\n                        {\r\n                            homeBlog.count > 0 &&\r\n                            <>\r\n                                <h3>\r\n                                    <Link to={ `/blogs/${(homeBlog.name.toLowerCase())}` }>\r\n                                        { homeBlog.name } <small>({ homeBlog.count })</small>\r\n                                    </Link>\r\n                                </h3>\r\n                                <hr className='mt-1' />\r\n\r\n                                <div className='home_blogs'>\r\n                                    {\r\n                                        homeBlog.blogs.map(blog =>(\r\n                                            <CardVert key={blog._id} blog={blog} />\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            </>\r\n                        }\r\n\r\n                        {\r\n                            //Read more blog\r\n                            homeBlog.count > 4 &&\r\n                            <Link className='text-end d-clock mt-2 mb-3 text-decoration-none' \r\n                            to={`/blogs/${homeBlog.name}`}>\r\n                                Đọc thêm &gt;&gt;\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import axios from 'axios'\r\n\r\nimport { API_URL } from './config'\r\n\r\naxios.defaults.withCredentials = true\r\n\r\nexport const postAPI = async (url: string, post: object, token?:string) => {\r\n    const res = await axios.post(`${API_URL}/api/${url}`, post, {\r\n        headers: {Authorization: token}\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const getAPI = async (url: string, token?:string) => {\r\n    const res = await axios.get(`${API_URL}/api/${url}`, {\r\n        headers: {Authorization: token}\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const patchAPI = async (url: string, post: object, token?:string) => {\r\n    const res = await axios.patch(`${API_URL}/api/${url}`, post, {\r\n        headers: {Authorization: token}\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const putAPI = async (url: string, post: object, token?:string) => {\r\n    const res = await axios.put(`${API_URL}/api/${url}`, post, {\r\n        headers: {Authorization: token}\r\n    })\r\n\r\n    return res;\r\n}\r\n\r\nexport const deleteAPI = async (url: string, token?:string) => {\r\n    const res = await axios.delete(`${API_URL}/api/${url}`, {\r\n        headers: {Authorization: token}\r\n    })\r\n\r\n    return res;\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { IParams } from '../../utils/typeScript'\r\nimport { postAPI } from '../../utils/fetchData'\r\nimport { showErrMsg, showSuccessErrMsg } from '../../components/alert/Alert'\r\n\r\nconst Active = () => {\r\n    const { slug }: IParams = useParams()\r\n    const [err, setErr] = useState('')\r\n    const [success, setSuccess] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(slug){\r\n            postAPI('active', { active_token: slug })\r\n            .then(res => setSuccess(res.data.msg))\r\n            .catch(err => setErr(err.respond.data.msg))\r\n        }\r\n    }, [slug])\r\n\r\n    console.log(slug)\r\n\r\n    return (\r\n        <div>\r\n            { err && showErrMsg(err) }\r\n            { success && showSuccessErrMsg(success) }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Active\r\n"],"sourceRoot":""}